'-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'																																																
'																Reconstruction des réseaux d'assainissement artificiels																			
'																																																
'														Préparation des fichiers initiaux pour représenter les transerts dans SURFEX															
'------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Include "Mapbasic.def"
Include "Icons.def"

Declare sub main

Declare sub Fichiers_ini
Declare sub Représentation
Declare sub Calcul
Declare sub Calcul_EP
Declare sub Quitter


Dim aa, bb,cc, aar, bbr, ccr, k as Integer
Dim tab, tabenr, ReseauSTEP_PC AS string 
Dim X1,Y1, X2, Y2, Xini, Yini, Xfin, Yfin, dist, Xaut, Yaut, D1, D2,z, Smin, ResDist, rap, co, Xi, Yi, L, l1, AltiDo, AltiReg, Ori, Des, lin, lin2, col as float
Dim m, n, nn, nbr, ids, nb, ID, idr, idha, Id_fen, idn, Fin, i, S, st, av, ex, ido, idautre, ini, exu, Finp, O, D, ida, STEP_Un, Res, idd as Integer
Dim dejafait, Lignes_Interdites_PC, relevement, PointB, test, Devers, dev, Cnx_Unit_EU as Logical



'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'																		Menu principal																												
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

sub main 
	Close All
	Print chr$(12)
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Table ini\Grille_PC.TAB" as Grille_PC
	Fetch Rec 1 from Grille_PC
		col=Grille_PC.id_Col
		lin=Grille_PC.id_Row
		X1=centroidx(Grille_PC.obj)
		Y1=centroidy(Grille_PC.obj)
		if lin=1 then
			lin2=lin+1
		else
			lin2=lin-1
		end if
		Select * from Grille_PC where id_Col=col and id_Row=lin2 into MailleSuivante
		X2=centroidx(MailleSuivante.obj)
		Y2=centroidy(MailleSuivante.obj)
		Res=Distance(X1,Y1,X2,Y2,"m")
		print "La résolution est de " & Res & "m."
	If Res=0 then
		Res=250
		print "Attention, la résolution n'a pas été calculée, on pose Res=" & Res & "m."
	end if
	Close All

	
Cnx_Unit_EU=1
	If Cnx_Unit_EU=1 then
		print "Le réseau unitaire peut déverser dans le réseau séparatif"
	else
		print "Le réseau unitaire ne peut pas déverser dans le réseau séparatif"
	end if 

	aa=1	'10
	bb=1	'2
	cc=1	'20
		
	aar=aa
	bbr=bb
	ccr=cc

Create menu "Transferts dans TEB-Hydro" as 
	"1-Préparation des fichiers initiaux" calling Fichiers_ini,
	"2-Représentation des noeuds" calling Représentation,
	"3-Reconstruction des réseaux unitaire et d'eaux usées" calling Calcul,
	"4-Reconstruction du réseau des eaux pluviales" calling Calcul_EP,
	"5-Quitter le programme" calling Quitter

alter menu bar add "Transferts dans TEB-Hydro" 

end sub
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'																		1-Préparation des fichiers initiaux																										
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
sub Fichiers_ini
Dim Fait as integer
Fait=0
if Fait=0 then
				
print"Préparation de la Zone Habitat"
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Table ini\Osc_PC.TAB" Interactive as Osc_PC
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Table ini\Grille_PC.TAB" as Grille_PC
   	n=ColumnInfo(Grille_PC,"COL3", COL_INFO_TYPE)
	If n<>3 then
		Alter Table "Grille_PC" ( modify Id_Row Integer )

	end if








	select * from Osc_PC where MOS2012_11=5 or MOS2012_11=6 or MOS2012_11=7 or MOS2012_11=8 or MOS2012_11=9 or MOS2012_11=10 into ZoneHabite
'------- Modification KC 20181008 ----------------
	'Commit Table ZoneHabite As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\ZoneHabitat_PC.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
	'Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\ZoneHabitat_PC.TAB" as ZoneHabitat_PC
	Commit Table ZoneHabite As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Table ini\ZoneHabitat_PC.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Table ini\ZoneHabitat_PC.TAB" as ZoneHabitat_PC
'-------------------------------------------------
	Close Table ZoneHabite
	
print"Agrégation des zones proches"
	Map from ZoneHabitat_PC
	Id_fen= FrontWindow()
	Set Map Window Id_fen  Layer 1 Editable On
	select * from ZoneHabitat_PC into Selection
	Objects Combine 
	Objects Disaggregate All Into Table ZoneHabitat_PC  
	Commit Table ZoneHabitat_PC Interactive
	select * from ZoneHabitat_PC into Selection
	Objects Combine 
	Objects Disaggregate All Into Table ZoneHabitat_PC  
	Commit Table ZoneHabitat_PC Interactive
	Set Map Window Id_fen Layer 1 Display Off
	
print"Découpage des zones suivant le maillage"
	pack table ZoneHabitat_PC
	Update ZoneHabitat_PC Set Shape_area = CartesianArea(obj, "sq km")
	Map from ZoneHabitat_PC
	Id_fen= FrontWindow()
	Set Map Window Id_fen Layer 1 Editable On
	select * from ZoneHabitat_PC into ZoneHabitatADécouper
	Set Map Window Id_fen Layer 1 Editable On
	Set Target On
	select * from Grille_PC into Selection
	Objects Split Into Target Data Shape_area=Shape_area
	Commit Table ZoneHabitat_PC Interactive
	Objects Disaggregate Into Table ZoneHabitat_PC
	Commit Table ZoneHabitat_PC Interactive
	Update ZoneHabitat_PC Set Shape_area = CartesianArea(obj, "sq km")
	Commit table ZoneHabitat_PC
	Alter table ZoneHabitat_PC (add IDOBJ integer)
	Commit table ZoneHabitat_PC
	Update ZoneHabitat_PC Set IDOBJ = rowid
	Commit table ZoneHabitat_PC Interactive
	Alter Table "ZoneHabitat_PC" ( add ID_maille float) Interactive	
	Commit Table ZoneHabitat_PC Interactive

print"Choix d'une zone desservie unique par maille"
	Close All Interactive
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Table ini\Grille_PC.TAB" as Grille_PC
'------- Modification KC 20181008 ----------------
	'Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\ZoneHabitat_PC.TAB" as ZoneHabitat_PC
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Table ini\ZoneHabitat_PC.TAB" as ZoneHabitat_PC
'-------------------------------------------------
	Select * from ZoneHabitat_PC, Grille_PC where Grille_PC.Obj Contains ZoneHabitat_PC.Obj into ZoneDesservie
	Update ZoneDesservie Set ID_maille=Id
	Commit Table ZoneDesservie As "D:\MOSSET\Desktop\Temporaire\ZoneDesservie.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
	close table ZoneDesservie
	Open Table "D:\MOSSET\Desktop\Temporaire\ZoneDesservie.TAB" Interactive
	Select Max(Shape_area), Id from ZoneDesservie into ZoneDesservie2
	Commit Table ZoneDesservie2 As "D:\MOSSET\Desktop\Temporaire\ZoneDesservie2.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
	close table ZoneDesservie2
	Open Table "D:\MOSSET\Desktop\Temporaire\ZoneDesservie2.TAB" Interactive
	Alter Table "ZoneDesservie2" ( rename _COL1 Smax )
	Commit table ZoneDesservie2 Interactive
	Alter Table "ZoneDesservie2" ( rename _var_ ID )
	Select ZoneDesservie.IDOBJ, ZoneDesservie.Shape_area, ZoneDesservie.ID_maille from ZoneDesservie,ZoneDesservie2 where ZoneDesservie.ID=ZoneDesservie2.ID And ZoneDesservie.Shape_area=ZoneDesservie2.Smax Into ZoneDesservie3
	Close table ZoneHabitat_PC
'------- Modification KC 20181008 ----------------
	'commit table ZoneDesservie3 As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\ZoneHabitat_PC.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
	'Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\ZoneHabitat_PC.TAB" as ZoneHabitat_PC
	Commit table ZoneDesservie3 As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Table ini\ZoneHabitat_PC.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Table ini\ZoneHabitat_PC.TAB" as ZoneHabitat_PC
'-------------------------------------------------
	Close table ZoneDesservie3
	Drop Table ZoneDesservie
	Drop Table ZoneDesservie2
	
	Alter table "ZoneHabitat_PC" (add Unitaire Logical, EU Logical)
	Commit table ZoneHabitat_PC
end if

Close All Interactive
print "Fin de la préparation des fichiers initiaux"

end sub

'_________________________________________________________________________________________________________________________________________________________________________________________________________

'																					 2-Représentations des noeuds 
'_________________________________________________________________________________________________________________________________________________________________________________________________________

sub Représentation

	Close all

'------- Modification KC 20181008 ----------------
	'Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\ZoneHabitat_PC.TAB" as ZoneHabitat_PC
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Table ini\ZoneHabitat_PC.TAB" as ZoneHabitat_PC
	Commit table ZoneHabitat_PC As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Noeuds\ZoneHabitat_PC.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive 
	Close Table ZoneHabitat_PC  
	Open table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Noeuds\ZoneHabitat_PC.TAB"
'-------------------------------------------------
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Table ini\Grille_PC.TAB" as Grille_PC
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Table ini\Grille_MNT_PC.TAB" as MNT
	
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Table ini\Station_Relevage_PC.TAB" as SRToutePC
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Table ini\Station_Relevage_dep.TAB" as SR_dep
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Table ini\Deversoir_Orage_PC.TAB" as DOToutePC
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Table ini\Deversoir_Orage_dep.TAB" as DO_dep
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Table ini\Regard_Unitaire_PC.TAB" as Regards_unitaires
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Table ini\Regard_EU_PC.TAB" as Regards_EU
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Table ini\Regards_dep.TAB" as Regards_dep
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Table ini\Regard_EP_PC.TAB" as Regards
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Table ini\Regards_EP_dep.TAB" as Regards_EP_dep
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Table ini\STEP_PC.TAB" as STEP_PC
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Table ini\STEP_Surf_PC.TAB" as STEP_Surf_PC
'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'                                                                    2.0 Ouverture des tables déjà créées pour réseau SIAAP
'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'------- Modification KC 20181008 ----------------
	'Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Noeuds_EP_PC.TAB" as Noeuds_EP_PC
	'Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Noeuds_Zone_PC.TAB" as Noeuds_Zone_PC
	'Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Noeuds_Unitaires_PC.TAB" as Noeuds_Unitaires_PC
	'Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Noeuds_EU_PC.TAB" as Noeuds_EU_PC

	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Table ini\Noeuds_EP_SIAAP.TAB" as Noeuds_EP_PC












	Commit table Noeuds_EP_PC As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Noeuds\Noeuds_EP_PC.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
	Close table Noeuds_EP_PC
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Noeuds\Noeuds_EP_PC.TAB" as Noeuds_EP_PC

	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Table ini\Noeuds_SIAAP.TAB" as Noeuds_Zone_PC
	Commit table Noeuds_Zone_PC As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Noeuds\Noeuds_Zone_PC.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
	Close table Noeuds_Zone_PC
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Noeuds\Noeuds_Zone_PC.TAB" as Noeuds_Zone_PC

	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Table ini\Noeuds_Uni_SIAAP.TAB" as Noeuds_Unitaires_PC
	Commit table Noeuds_Unitaires_PC As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Noeuds\Noeuds_Unitaires_PC.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
	Close table Noeuds_Unitaires_PC
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Noeuds\Noeuds_Unitaires_PC.TAB" as Noeuds_Unitaires_PC

	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Table ini\Noeuds_EU_SIAAP.TAB" as Noeuds_EU_PC
	Commit table Noeuds_EU_PC As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Noeuds\Noeuds_EU_PC.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
	Close table Noeuds_EU_PC
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Noeuds\Noeuds_EU_PC.TAB" as Noeuds_EU_PC

'-------------------------------------------------



Dim Fait, nbr as integer
Fait=0
if Fait=0 then 
'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'                                                                    2.1 Choix des regards unitaires et EU
'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

print"NOEUDS DU RESEAU UNITAIRE ET DU RESEAU D'EAUX USEES"
'------------ modification test pour privilégier Uni ----------------------
Update ZoneHabitat_PC Set Unitaire=False
Update ZoneHabitat_PC Set EU=False
'Select * from Noeuds_Zone_PC where reseau="Unitaire" into Noeuds_uni_SIAAP
Select Unitaire from ZoneHabitat_PC, Noeuds_Unitaires_PC where ZoneHabitat_PC.obj Intersects Noeuds_Unitaires_PC.obj into AMettreAJour
Update AMettreAJour Set Unitaire=true
Commit Table ZoneHabitat_PC

'Select * from Noeuds_Zone_PC where reseau="EU" into Noeuds_eu_SIAAP
Select EU from ZoneHabitat_PC, Noeuds_EU_PC where ZoneHabitat_PC.obj Intersects Noeuds_EU_PC.obj into AMettreAJour
Update AMettreAJour Set EU=true
Commit Table ZoneHabitat_PC
Select EU from ZoneHabitat_PC, Noeuds_EP_PC where ZoneHabitat_PC.obj Intersects Noeuds_EP_PC.obj into AMettreAJour
Update AMettreAJour Set EU=true
Commit Table ZoneHabitat_PC
'--- KC correction bug: deux noeuds EU et unitaire dans même maille 20181009 ---
Select EU from ZoneHabitat_PC where Unitaire=true and EU=true into AMettreAJour
Update AMettreAJour set EU=false
Commit Table ZoneHabitat_PC


'--------------------------------------------------------------------------------
'------------------------------------------------------------- modification Pour Bug Table deja ouverte linge 753----------------
Close Table Noeuds_Unitaires_PC
Close Table Noeuds_EU_PC

'--------------------------------------------------------------------------

'--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'                                                                    2.2 Ouvrages spéciaux
'--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

'                                              							2.2.1 Création table DO départements 
'--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
print "Création et remplissage de la table  des déversoirs d'orage départementaux dans la zone"
'	Select  DOToutePC.obj, DOToutePC.Nom_DO from DOToutePC, STEP_Surf_PC where DOToutePC.obj Within STEP_Surf_PC.obj into DODansLaZone1
'	Commit Table DODansLaZone1 As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\DO_dans la zone PC.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
'	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\DO_dans la zone PC.TAB" as Deversoir
'	Close Table DODansLaZone1
'	Alter Table "Deversoir" ( add NUMERO Integer, STEP_PC_ID Integer, Alti_TN float, Dist_STEP float,StationR logical, Deversoir_Orage logical, Dom integer)
'	Alter Table "Deversoir" ( rename _Object RESEAU)
'	Alter Table "Deversoir" ( order NUMERO, RESEAU, NOM_DO, STEP_PC_ID, Alti_TN, Dist_STEP)
'	Commit table Deversoir
'	Add Column "Deversoir" (STEP_PC_ID )From STEP_Surf_PC Set To STEP_PC_ID Where contains
'	Add Column "Deversoir" (Alti_TN )From MNT Set To Alti Where contains
'	Update Deversoir Set NUMERO = rowid
'	Update Deversoir Set Deversoir_Orage=true
'	Update Deversoir Set Dom=1
'	Commit Table Deversoir

'print "Calcul des distances en ligne droite des DO jusqu'à la STEP"
'	Set CoordSys Table Deversoir
'	Fetch First From STEP_PC
'	Do while not EOT (STEP_PC)
'		ids=STEP_PC.STEP_PC_ID
'		if ids <> 0 then
'			Select * from Deversoir where STEP_PC_ID=ids into RegardSTEP_PC
'			nb = Tableinfo(RegardSTEP_PC , TAB_INFO_NROWS)
'			if nb > 0 then 	'La STEP_PC a des regards désservis
'				Select * from STEP_PC where STEP_PC_ID=ids into STEP_PCEnCours
'				Xini = centroidx(STEP_PCEnCours.obj)
'				Yini = centroidy(STEP_PCEnCours.obj)
'				Close table STEP_PCEnCours
'				Fetch First from RegardSTEP_PC
'				Do while not EOT (RegardSTEP_PC)
'					idr = RegardSTEP_PC.NUMERO
'					Select * from RegardSTEP_PC where NUMERO=idr into RegardEnCours
'					Xfin = centroidx(RegardEnCours.obj)
'					Yfin = centroidy(RegardEnCours.obj)
'					dist = Distance(Xini,Yini,Xfin,Yfin,"m")
'					Update RegardEnCours Set Dist_STEP = dist
'					Fetch Next From RegardSTEP_PC
'				Loop	
'			end if
'		end if
'		Fetch Next From STEP_PC
'	Loop	
'	commit table Deversoir

	Select  DO_dep.obj, DO_dep.Nom_DO from DO_dep, STEP_Surf_PC where DO_dep.obj Within STEP_Surf_PC.obj into DODansLaZone2
'------- Modification KC 20181008 ----------------
	'Commit Table DODansLaZone2 As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\DO_dans la zone dep.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
	'Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\DO_dans la zone dep.TAB" as Deversoir_dep
	Commit Table DODansLaZone2 As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Noeuds\DO_dans la zone dep.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Noeuds\DO_dans la zone dep.TAB" as Deversoir_dep
'------------------------------------------------
	Close Table DODansLaZone2
	Alter Table "Deversoir_dep" ( add NUMERO Integer, STEP_PC_ID Integer, Alti_TN float, Dist_STEP float,StationR logical, Deversoir_Orage logical, Dom integer)
	Alter Table "Deversoir_dep" ( rename _Object RESEAU)
	Alter Table "Deversoir_dep" ( order NUMERO, RESEAU, NOM_DO, STEP_PC_ID, Alti_TN, Dist_STEP)
	Commit table Deversoir_dep
	Add Column "Deversoir_dep" (STEP_PC_ID )From STEP_Surf_PC Set To STEP_PC_ID Where contains
	Add Column "Deversoir_dep" (Alti_TN )From MNT Set To Alti Where contains
	Update Deversoir_dep Set NUMERO = rowid
	Update Deversoir_dep Set Deversoir_Orage=true
	Update Deversoir_dep Set Dom=2
	Commit Table Deversoir_dep
print "Calcul des distances en ligne droite des DO jusqu'à la STEP"
	Set CoordSys Table Deversoir_dep
	Fetch First From STEP_PC
	Do while not EOT (STEP_PC)
		ids=STEP_PC.STEP_PC_ID
		if ids <> 0 then
			Select * from Deversoir_dep where STEP_PC_ID=ids into RegardSTEP_PC
			nb = Tableinfo(RegardSTEP_PC , TAB_INFO_NROWS)
			if nb > 0 then 	'La STEP_PC a des regards désservis
				Select * from STEP_PC where STEP_PC_ID=ids into STEP_PCEnCours
				Xini = centroidx(STEP_PCEnCours.obj)
				Yini = centroidy(STEP_PCEnCours.obj)
				Close table STEP_PCEnCours
				Fetch First from RegardSTEP_PC
				Do while not EOT (RegardSTEP_PC)
					idr = RegardSTEP_PC.NUMERO
					Select * from RegardSTEP_PC where NUMERO=idr into RegardEnCours
					Xfin = centroidx(RegardEnCours.obj)
					Yfin = centroidy(RegardEnCours.obj)
					dist = Distance(Xini,Yini,Xfin,Yfin,"m")
					Update RegardEnCours Set Dist_STEP = dist
					Fetch Next From RegardSTEP_PC
				Loop	
			end if
		end if
		Fetch Next From STEP_PC
	Loop	
	commit table Deversoir_dep
'--------------------------------------------------------------------------------------------------
' attention, peut-être besoin de regrouper les deux tables déversoirs dans une seule avec dom=1
'----------------------------------------------------------------------------------------------------

print "Création et remplissage de la table de l'ensemble des stations de relevage dans la zone"
'	Select  SRToutePC.Libelle_ou, SRToutePC.obj, SRToutePC.Alti_TN from SRToutePC, STEP_Surf_PC where SRToutePC.obj Within STEP_Surf_PC.obj and SRToutePC.Alti_TN<>-9999 into SRDansLaZone1
'	Commit Table SRDansLaZone1 As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\SR_dans la zone PC.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
'	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\SR_dans la zone PC.TAB" as StationDeRelevement
'	Close Table SRDansLaZone1
'	Alter Table "StationDeRelevement" ( rename _Object RESEAU)
'	Alter Table "StationDeRelevement" ( add NUMERO Integer, STEP_PC_ID Integer, Dist_STEP float, StationR logical, Deversoir_Orage logical, Dom integer)
'	Alter Table "StationDeRelevement" ( order NUMERO, Libelle_ou, RESEAU, STEP_PC_ID, Alti_TN, Dist_STEP)
'	Commit table StationDeRelevement
'	Add Column "StationDeRelevement" (STEP_PC_ID )From STEP_Surf_PC Set To STEP_PC_ID Where contains
'	Update StationDeRelevement Set NUMERO = rowid
'	Update StationDeRelevement Set StationR=true
'	Update StationDeRelevement Set Dom=1
'	Commit Table StationDeRelevement
'print "Calcul des distances en ligne droite depuis les stations de relèvement jusqu'à la STEP"
'	Set CoordSys Table StationDeRelevement
'	Fetch First From STEP_PC
'	Do while not EOT (STEP_PC)
'		ids=STEP_PC.STEP_PC_ID
'		if ids <> 0 then
'			Select * from StationDeRelevement where STEP_PC_ID=ids into RegardSTEP_PC
'			nb = Tableinfo(RegardSTEP_PC , TAB_INFO_NROWS)
'			if nb > 0 then 	'La STEP_PC a des regards desservis
'				Select * from STEP_PC where STEP_PC_ID=ids into STEP_PCEnCours
'				Xini = centroidx(STEP_PCEnCours.obj)
'				Yini = centroidy(STEP_PCEnCours.obj)
'				Close table STEP_PCEnCours
'				Fetch First from RegardSTEP_PC
'				Do while not EOT (RegardSTEP_PC)
'					idr = RegardSTEP_PC.NUMERO
'					Select * from RegardSTEP_PC where NUMERO=idr into RegardEnCours
'					Xfin = centroidx(RegardEnCours.obj)
'					Yfin = centroidy(RegardEnCours.obj)
'					dist = Distance(Xini,Yini,Xfin,Yfin,"m")
'					Update RegardEnCours Set Dist_STEP = dist
'					Fetch Next From RegardSTEP_PC
'				Loop	
'			end if
'		end if
'		Fetch Next From STEP_PC
'	Loop	
'	commit table StationDeRelevement
'--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'                                                               			2.2.2 Création table SR département
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

print "Création et remplissage de la table de l'ensemble des stations de relevage dans la zone"
	Select  SR_dep.Libelle_ou, SR_dep.obj, SR_dep.Alti_TN from SR_dep, STEP_Surf_PC where SR_dep.obj Within STEP_Surf_PC.obj and SR_dep.Alti_TN<>-9999 into SRDansLaZone2
'------- Modification KC 20181008 ----------------
	'Commit Table SRDansLaZone2 As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\SR_dans la zone dep.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
	'Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\SR_dans la zone dep.TAB" as StationDeRelevement_dep
	Commit Table SRDansLaZone2 As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Noeuds\SR_dans la zone dep.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Noeuds\SR_dans la zone dep.TAB" as StationDeRelevement_dep
'-------------------------------------------------
	Close Table SRDansLaZone2
	Alter Table "StationDeRelevement_dep" ( rename _Object RESEAU)
	Alter Table "StationDeRelevement_dep" ( add NUMERO Integer, STEP_PC_ID Integer, Dist_STEP float, StationR logical, Deversoir_Orage logical, Dom integer)
	Alter Table "StationDeRelevement_dep" ( order NUMERO, Libelle_ou, RESEAU, STEP_PC_ID, Alti_TN, Dist_STEP)
	Commit table StationDeRelevement_dep
	Add Column "StationDeRelevement_dep" (STEP_PC_ID )From STEP_Surf_PC Set To STEP_PC_ID Where contains
	Update StationDeRelevement_dep Set NUMERO = rowid
	Update StationDeRelevement_dep Set StationR=true
	Update StationDeRelevement_dep Set Dom=2
	Commit Table StationDeRelevement_dep
print "Calcul des distances en ligne droite depuis les stations de relèvement jusqu'à la STEP"
	Set CoordSys Table StationDeRelevement_dep
	Fetch First From STEP_PC
	Do while not EOT (STEP_PC)
		ids=STEP_PC.STEP_PC_ID
		if ids <> 0 then
			Select * from StationDeRelevement_dep where STEP_PC_ID=ids into RegardSTEP_PC
			nb = Tableinfo(RegardSTEP_PC , TAB_INFO_NROWS)
			if nb > 0 then 	'La STEP_PC a des regards desservis
				Select * from STEP_PC where STEP_PC_ID=ids into STEP_PCEnCours
				Xini = centroidx(STEP_PCEnCours.obj)
				Yini = centroidy(STEP_PCEnCours.obj)
				Close table STEP_PCEnCours
				Fetch First from RegardSTEP_PC
				Do while not EOT (RegardSTEP_PC)
					idr = RegardSTEP_PC.NUMERO
					Select * from RegardSTEP_PC where NUMERO=idr into RegardEnCours
					Xfin = centroidx(RegardEnCours.obj)
					Yfin = centroidy(RegardEnCours.obj)
					dist = Distance(Xini,Yini,Xfin,Yfin,"m")
					Update RegardEnCours Set Dist_STEP = dist
					Fetch Next From RegardSTEP_PC
				Loop	
			end if
		end if
		Fetch Next From STEP_PC
	Loop	
	commit table StationDeRelevement_dep

'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'                                                               2.3 Noeuds unitaires et EU SIAAP
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'                                                               2.3.1 sélection des regards unitaires SIAAP dans la zone
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


'print "Création et remplissage de la table de l'ensemble des regards Unit potentiels dans la zone"
'	Select  Regards_unitaires.NUMERO, Regards_unitaires.RESEAU, Regards_unitaires.Alti_TN, ZoneHabitat_PC.IDOBJ from Regards_unitaires, ZoneHabitat_PC where Regards_unitaires.obj Within ZoneHabitat_PC.obj into RegardsDansLaZone
'	Commit Table RegardsDansLaZone As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Tous_Regards_Unitaire_temp.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
'	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Tous_Regards_Unitaire_temp.TAB" as Tous_Regards_Unitaire_temp
'	Close Table RegardsDansLaZone
'	Select Tous_Regards_Unitaire_temp.NUMERO, Tous_Regards_Unitaire_temp.Alti_TN, Tous_Regards_Unitaire_temp.RESEAU, Tous_regards_Unitaire_temp.IDOBJ from Tous_Regards_Unitaire_temp, STEP_Surf_PC where Tous_Regards_Unitaire_temp.Obj Within STEP_Surf_PC.Obj into RegardsDansLaZone1
'	Commit Table RegardsDansLaZone1 As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Tous_Regards_Unitaire.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
'	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Tous_Regards_Unitaire.TAB" as Tous_Regards_Unitaire
'	Drop table Tous_Regards_Unitaire_temp
'	Alter Table "Tous_Regards_Unitaire" ( add ID_Regard Integer, STEP_PC_ID Integer, Dist_STEP float, Dom integer)
'	Alter Table "Tous_Regards_Unitaire" ( rename IDOBJ Osc_PC_ID)
'	Alter Table "Tous_Regards_Unitaire" ( order ID_Regard, NUMERO, RESEAU, Osc_PC_ID, STEP_PC_ID, Alti_TN, Dist_STEP, Dom)
'	Commit table Tous_Regards_Unitaire
'	Add Column "Tous_Regards_Unitaire" (STEP_PC_ID )From STEP_Surf_PC Set To STEP_PC_ID Where contains
'	'Add Column "Tous_Regards_Unitaire" (Alti_TN )From MNT Set To Alti Where contains
'	Update Tous_Regards_Unitaire Set ID_Regard = rowid
'	Commit Table Tous_Regards_Unitaire
'	Update Tous_Regards_Unitaire Set RESEAU = "Unitaire"
'	Update Tous_Regards_Unitaire Set Dom = 1
'	Commit Table Tous_Regards_Unitaire

'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'                                                               2.3.2 sélection des regards EU SIAAP dans la zone
'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------					
'print "Création et remplissage de la table de l'ensemble des regards EU potentiels dans la zone"
'	Select  Regards_EU.NUMERO, Regards_EU.RESEAU, Regards_EU.Alti_TN, ZoneHabitat_PC.IDOBJ from Regards_EU, ZoneHabitat_PC where Regards_EU.obj Within ZoneHabitat_PC.obj into RegardsDansLaZone
'	Commit Table RegardsDansLaZone As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Tous_Regards_EU_temp.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
'	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Tous_Regards_EU_temp.TAB" as Tous_Regards_EU_temp
'	Close Table RegardsDansLaZone
'	Select Tous_Regards_EU_temp.NUMERO, Tous_Regards_EU_temp.Alti_TN, Tous_Regards_EU_temp.RESEAU, Tous_Regards_EU_temp.IDOBJ from Tous_Regards_EU_temp, STEP_Surf_PC where Tous_Regards_EU_temp.Obj Within STEP_Surf_PC.Obj into RegardsDansLaZone1
'	Commit Table RegardsDansLaZone1 As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Tous_Regards_EU.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
'	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Tous_Regards_EU.TAB" as Tous_Regards_EU
'	Drop table Tous_Regards_EU_temp
'	Alter Table "Tous_Regards_EU" ( add ID_Regard Integer, STEP_PC_ID Integer, Dist_STEP float, Dom integer)
'	Alter Table "Tous_Regards_EU" ( rename IDOBJ Osc_PC_ID)
'	Alter Table "Tous_Regards_EU" ( order ID_Regard, NUMERO, RESEAU, Osc_PC_ID, STEP_PC_ID, Alti_TN, Dist_STEP, Dom)
'	Commit table Tous_Regards_EU
'	Add Column "Tous_Regards_EU" (STEP_PC_ID )From STEP_Surf_PC Set To STEP_PC_ID Where contains
'	'Add Column "Tous_Regards_EU" (Alti_TN )From MNT Set To Alti Where contains
'	Update Tous_Regards_EU Set ID_Regard = rowid
'	Commit Table Tous_Regards_EU
'	Update Tous_Regards_EU Set RESEAU = "EU"
'	Update Tous_Regards_EU Set Dom = 1
'	Commit Table Tous_Regards_EU

'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'                                                               2.4 Noeuds unitaires et EU départementaux
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'                                                               2.4.1 Sélection des regards unitaires et EU départementaux dans la zone
'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
print "Création et remplissage de la table de l'ensemble des regards departementaux potentiels dans la zone"
	Select  Regards_dep.NUMERO, Regards_dep.RESEAU, Regards_dep.Alti_TN, ZoneHabitat_PC.IDOBJ from Regards_dep, ZoneHabitat_PC where Regards_dep.obj Within ZoneHabitat_PC.obj into RegardsDansLaZone
'------- Modification KC 20181008 ----------------
	'Commit Table RegardsDansLaZone As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Tous_Regards_dep_temp.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
	'Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Tous_Regards_dep_temp.TAB" as Tous_Regards_dep_temp
	Commit Table RegardsDansLaZone As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Noeuds\Tous_Regards_dep_temp.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Noeuds\Tous_Regards_dep_temp.TAB" as Tous_Regards_dep_temp
'-------------------------------------------------
	Close Table RegardsDansLaZone
	Select Tous_Regards_dep_temp.NUMERO, Tous_Regards_dep_temp.Alti_TN, Tous_Regards_dep_temp.RESEAU, Tous_Regards_dep_temp.IDOBJ from Tous_Regards_dep_temp, STEP_Surf_PC where Tous_Regards_dep_temp.Obj Within STEP_Surf_PC.Obj into RegardsDansLaZone1
'------- Modification KC 20181008 ----------------
	'Commit Table RegardsDansLaZone1 As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Tous_Regards_dep.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
	'Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Tous_Regards_dep.TAB" as Tous_Regards_dep
	Commit Table RegardsDansLaZone1 As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Noeuds\Tous_Regards_dep.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Noeuds\Tous_Regards_dep.TAB" as Tous_Regards_dep
'-------------------------------------------------
	Drop table Tous_Regards_dep_temp
	Alter Table "Tous_Regards_dep" ( add ID_Regard Integer, STEP_PC_ID Integer, Dist_STEP float, Dom integer)
	Alter Table "Tous_Regards_dep" ( rename IDOBJ Osc_PC_ID)

	Alter Table "Tous_Regards_dep" ( order ID_Regard, NUMERO, RESEAU, Osc_PC_ID, STEP_PC_ID, Alti_TN, Dist_STEP, Dom)
	Commit table Tous_Regards_dep
	Add Column "Tous_Regards_dep" (STEP_PC_ID )From STEP_Surf_PC Set To STEP_PC_ID Where contains
	'Add Column "Tous_Regards_dep" (Alti_TN )From MNT Set To Alti Where contains
	Update Tous_Regards_dep Set ID_Regard = rowid
	Update Tous_Regards_dep Set Dom=2
	Commit Table Tous_Regards_dep

'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'                                                               2.3.3 Sélection des noeuds EU et unitaires SIAAP
'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'print "Création de la table des noeuds"
'	Select * from Tous_Regards_EU where ID_Regard=1 into NoeudStructurant
'	Commit table NoeudStructurant as "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Noeuds_Zone_PC.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
'	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Noeuds_Zone_PC.TAB" as Noeuds_Zone_PC
'	Alter Table "Noeuds_Zone_PC" (add StationR Logical, Deversoir_Orage Logical, Point_Bas Logical, STEP_PC Logical, ID_maille integer)
'	Delete from Noeuds_Zone_PC
'	Commit table Noeuds_Zone_PC
'	Pack table Noeuds_Zone_PC Graphic Data
'	Close Table NoeudStructurant

'print "Selection des regards structurants des réseaux unitaires et d'eaux usées"
'print"Regards SIAAP"
'	Select * from ZoneHabitat_PC where ZoneHabitat_PC.EU=FALSE into ZoneHabitat_PCUni
'	Fetch First From ZoneHabitat_PCUni
'	Do while not EOT (ZoneHabitat_PCUni)
'		idha=ZoneHabitat_PC.IDOBJ
'		Select * from Tous_Regards_Unitaire where Osc_PC_ID=idha order by Alti_TN into RegardsOsc_PC
'		nb = Tableinfo(RegardsOsc_PC , TAB_INFO_NROWS)
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'                                                               2.3.4 Regroupement des noeuds EU et unitaires SIAAP dans table Noeuds_Zone_PC puis sélection
'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'		if nb>0 then
'			Commit Table RegardsOsc_PC as "D:\MOSSET\Desktop\Temporaire\RegardOsc_PC.tab" TYPE NATIVE Charset "WindowsLatin1"
'			Open Table "D:\MOSSET\Desktop\Temporaire\RegardOsc_PC.tab" as RegardOsc_PC
'			Fetch First From RegardOsc_PC
'			idr=RegardOsc_PC.ID_Regard
'			Select * from RegardOsc_PC where ID_Regard=idr into NoeudZone
'			Insert Into Noeuds_Zone_PC ( COL1, COL2, COL3, COL4, COL5, COL6, COL7, COL8) Select COL1, COL2, COL3, COL4, COL5, COL6, COL7, COL8 From NoeudZone
'			Drop table RegardOsc_PC
'			Select Unitaire from ZoneHabitat_PC where IDOBJ=idha and EU=False into AMettreAJour
'			Update AMettreAJour set Unitaire=true
'		end if	
'	Fetch Next From ZoneHabitat_PCUni
'	Loop	
'	Commit table Noeuds_Zone_PC
	

'------ vérifier la table zonehabitat_PCuni ZoneHabitat_PC.EU=FALSE => table zonehabitat_PCuni ok---------------


'	Select * from ZoneHabitat_PC where ZoneHabitat_PC.Unitaire=False into ZoneHabitat_PCSEP
'	Fetch First From ZoneHabitat_PCSEP
'	Do while not EOT (ZoneHabitat_PCSEP)
'		idha=ZoneHabitat_PC.IDOBJ
'		Select * from Tous_Regards_EU where Osc_PC_ID=idha order by Alti_TN into RegardsOsc_PC
'		nb = Tableinfo(RegardsOsc_PC , TAB_INFO_NROWS)
'		if nb>0 then
'			Commit Table RegardsOsc_PC as "D:\MOSSET\Desktop\Temporaire\RegardOsc_PC.tab" TYPE NATIVE Charset "WindowsLatin1"
'			Open Table "D:\MOSSET\Desktop\Temporaire\RegardOsc_PC.tab" as RegardOsc_PC
'			Fetch First From RegardOsc_PC
'			idr=RegardOsc_PC.ID_Regard
'			Select * from RegardOsc_PC where ID_Regard=idr into NoeudZone
'			Insert Into Noeuds_Zone_PC( COL1, COL2, COL3, COL4, COL5, COL6, COL7, COL8) Select COL1, COL2, COL3, COL4, COL5, COL6, COL7, COL8 From NoeudZone
'			Drop table RegardOsc_PC
'			Select EU from ZoneHabitat_PC where IDOBJ=idha into AMettreAJour
'			Update AMettreAJour set EU=true
'		end if
'	Fetch Next From ZoneHabitat_PCSEP
'	Loop	
'	Commit table Noeuds_Zone_PC
'	Commit table ZoneHabitat_PC

'------ vérifier la table zonehabitat_PC EU=TRUe et unitaire=True, ok ---------------
'	Close Table RegardsOsc_PC Interactive
'	Close Table AMettreAJour Interactive


'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'                                                               2.4.2 Sélection des noeuds unitaires départementaux 
'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
print"Regards departementaux"
print "Regards unitaires"
	Select * from Tous_Regards_dep where Reseau="Unitaire" into Tous_Regards_dep_Unitaire
	Select * from ZoneHabitat_PC where ZoneHabitat_PC.EU=False and ZoneHabitat_PC.Unitaire=False into ZoneHabitat_Dept

	Fetch First From ZoneHabitat_Dept
	Do while not EOT (ZoneHabitat_Dept)
		idha=ZoneHabitat_Dept.IDOBJ
		Select * from Tous_Regards_dep_Unitaire where Osc_PC_ID=idha order by Alti_TN into RegardsOsc_dep
		nb = Tableinfo(RegardsOsc_dep , TAB_INFO_NROWS)
		if nb>0 then
			Commit Table RegardsOsc_dep as "D:\MOSSET\Desktop\Temporaire\RegardOsc_dep.tab" TYPE NATIVE Charset "WindowsLatin1"
			Open Table "D:\MOSSET\Desktop\Temporaire\RegardOsc_dep.tab" as RegardOsc_dep
			Fetch First From RegardOsc_dep
			idr=RegardOsc_dep.ID_Regard
			Select * from RegardOsc_dep where ID_Regard=idr into NoeudZone
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'                                                              2.4.3 Ajout des noeuds unitaires départementaux dans table Noeuds_Zone_PC (avec noeuds SIAAP) 
'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
			Insert Into Noeuds_Zone_PC( COL1, COL2, COL3, COL4, COL5, COL6, COL7, COL8) Select COL1, COL2, COL3, COL4, COL5, COL6, COL7, COL8 From NoeudZone

			Close table RegardOsc_dep
			Select Unitaire, EU from ZoneHabitat_PC where IDOBJ=idha into AMettreAJour
			Select * from Noeuds_Zone_PC where ID_Regard=idr into NoeudZone
			if NoeudZone.RESEAU="EU" then
				Update AMettreAJour set EU=true
			else
				Update AMettreAJour set 	Unitaire=true
			end if
		end if
'   		if idha=89686 then
'			end program
'		end if
	Fetch Next From ZoneHabitat_Dept
	Loop	
	Commit table Noeuds_Zone_PC
	Commit table ZoneHabitat_PC

'Select Unitaire from ZoneHabitat_PC, Noeuds_Unitaires_PC where ZoneHabitat_PC.obj Intersects Noeuds_Unitaires_PC.obj into AMettreAJour
'Update AMettreAJour Set Unitaire=true
'Commit Table ZoneHabitat_PC

	'select  from ZoneHabitat_PC where
	Close Table AMettreAJour Interactive

'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'                                                               2.4.4 Sélection des noeuds EU départementaux 
'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
print "Regards EU"
	Select * from Tous_Regards_dep where Reseau="EU" into Tous_Regards_dep_EU
'-------------------------------------------------------------------------------------------------------------------------------
'---- correction bug noeuds EU dep avec noeud EU SIAAP ou noeud unitaire dans même maille --------------------------------------
'	Select * from ZoneHabitat_PC where ZoneHabitat_PC.IDOBJ not in (Select Osc_PC_ID from Noeuds_Zone_PC) into ZoneHabitat_Dept
	Select * from ZoneHabitat_PC where ZoneHabitat_PC.EU=False and ZoneHabitat_PC.Unitaire=False into ZoneHabitat_Dept
'-------------------------------------------------------------------------------------------------------------------------------
	Fetch First From ZoneHabitat_Dept
	Do while not EOT (ZoneHabitat_Dept)
		idha=ZoneHabitat_Dept.IDOBJ
		Select * from Tous_Regards_dep_EU where Osc_PC_ID=idha order by Alti_TN into RegardsOsc_dep
		nb = Tableinfo(RegardsOsc_dep , TAB_INFO_NROWS)
		if nb>0 then
			Commit Table RegardsOsc_dep as "D:\MOSSET\Desktop\Temporaire\RegardOsc_dep.tab" TYPE NATIVE Charset "WindowsLatin1"
			Open Table "D:\MOSSET\Desktop\Temporaire\RegardOsc_dep.tab" as RegardOsc_dep
			Fetch First From RegardOsc_dep
			idr=RegardOsc_dep.ID_Regard
			Select * from RegardOsc_dep where ID_Regard=idr into NoeudZone
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'                                                               2.4.5 ajout des noeuds EU départementaux dans table Noeuds_Zone_PC (avec noeuds SIAAP)
'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
			Insert Into Noeuds_Zone_PC( COL1, COL2, COL3, COL4, COL5, COL6, COL7, COL8) Select COL1, COL2, COL3, COL4, COL5, COL6, COL7, COL8 From NoeudZone
			Close table RegardOsc_dep
			Select Unitaire, EU from ZoneHabitat_PC where IDOBJ=idha into AMettreAJour
			Select * from Noeuds_Zone_PC where ID_Regard=idr into NoeudZone
			if NoeudZone.RESEAU="EU" then
				Update AMettreAJour set EU=true
			else
				Update AMettreAJour set 	Unitaire=true
			end if
		end if
	Fetch Next From ZoneHabitat_Dept
	Loop	
	Commit table Noeuds_Zone_PC
	Commit table ZoneHabitat_PC
	Close Table AMettreAJour Interactive
'-------------------------------------------------------
' test reconstruction ZoneHabitat et noeuds EU et unitaire ok
'-----------------------------------------------------------

print "Calcul des distances en ligne droite des regards jusqu'à la STEP_PC"
	Set CoordSys Table Noeuds_Zone_PC
	Fetch First From STEP_PC
	Do while not EOT (STEP_PC)
		ids=STEP_PC.STEP_PC_ID
		if ids <> 0 then
			Select * from Noeuds_Zone_PC where STEP_PC_ID=ids into RegardSTEP_PC
			nb = Tableinfo(RegardSTEP_PC , TAB_INFO_NROWS)
			if nb > 0 then 	'La STEP_PC a des regards desservis
				Select * from STEP_PC where STEP_PC_ID=ids into STEP_PCEnCours
				Xini = centroidx(STEP_PCEnCours.obj)
				Yini = centroidy(STEP_PCEnCours.obj)
				Close table STEP_PCEnCours
				Fetch First from RegardSTEP_PC
				Do while not EOT (RegardSTEP_PC)
					idr = RegardSTEP_PC.ID_Regard
					Select * from RegardSTEP_PC where ID_Regard=idr into RegardEnCours
					Xfin = centroidx(RegardEnCours.obj)
					Yfin = centroidy(RegardEnCours.obj)
					dist = Distance(Xini,Yini,Xfin,Yfin,"m")
					Update RegardEnCours Set Dist_STEP = dist
					Fetch Next From RegardSTEP_PC
				Loop	
			end if
		end if
		Fetch Next From STEP_PC
	Loop	
	commit table Noeuds_Zone_PC

	Close Table RegardSTEP_PC Interactive
	Close Table STEP_PCEnCours Interactive
	Close Table RegardEnCours Interactive

'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'                                                               2.5 ajout des STEP, DO et SR aux noeuds (Noeuds_Zone_PC)
'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
print "Ajout des STEP_PC"
	Select STEP_PC_ID, obj from STEP_PC into STEP_PCAjout
	Insert Into Noeuds_Zone_PC ( COL3,COL5) Select COL2, COL1 From STEP_PCAjout
	Commit table Noeuds_Zone_PC
	Select * from Noeuds_Zone_PC where RESEAU="Point" into AMettreAJour
	Update AMettreAJour set RESEAU="STEP"	commit table Noeuds_Zone_PC
	Update AMettreAJour set STEP_PC=True	commit table Noeuds_Zone_PC

print "Ajout des déversoirs d'orage"
	Select * from Deversoir_dep, ZoneHabitat_PC where Deversoir_dep.obj within ZoneHabitat_PC.obj into DODansZone
	Insert into  Noeuds_Zone_PC (RESEAU, STEP_PC_ID, Alti_TN, Dist_STEP,Deversoir_Orage, Dom) Select RESEAU, STEP_PC_ID, Alti_TN, Dist_STEP, Deversoir_Orage, Dom from DODansZone

	Commit table Noeuds_Zone_PC

print "Ajout des stations de relèvement"
	Select * from StationDeRelevement_dep, ZoneHabitat_PC where StationDeRelevement_dep.obj within ZoneHabitat_PC.obj into SRDansZone
	Insert into  Noeuds_Zone_PC (NUMERO,RESEAU,STEP_PC_ID, Alti_TN, Dist_STEP,StationR, Dom) Select NUMERO ,RESEAU,STEP_PC_ID, Alti_TN, Dist_STEP, StationR, Dom from SRDansZone
	Commit table Noeuds_Zone_PC

'else
	'Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Noeuds_Zone_PC.TAB" as Noeuds_Zone_PC

	Update Noeuds_Zone_PC set ID_Regard=rowid
	Commit table Noeuds_Zone_PC
	Select * from Noeuds_Zone_PC where (RESEAU="Unitaire" or RESEAU="STEP") into Unitaire
	Update Unitaire set ID_Regard=ID_Regard+990000
	Commit table Noeuds_Zone_PC
	add Column "Noeuds_Zone_PC" (ID_maille) from ZoneHabitat_PC set to ID_maille where contains
	Commit table Noeuds_Zone_PC
	pack table Noeuds_Zone_PC Graphic Data

'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'                                                               2.6 Nettoyage de la table Noeuds_Zone_PC (obsolète)
'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------		
'print "Recalcul des altitudes des points en tenant compte des mailles voisines"
	'Create Table "Tampon" (ID_Regard Integer,Alti_TN Float) file "D:\MOSSET\Desktop\Temporaire\Tampon.tab" TYPE NATIVE Charset "WindowsLatin1"
	'Create Map For Tampon Using Noeuds_Zone_PC  
	'Create Index On Tampon (ID_Regard)
	'Create Index On Tampon (Alti_TN)
	'Create Object As Buffer From Noeuds_Zone_PC Width 10 Units "m" Type Spherical Resolution 12 Into Table Tampon Group by Rowid Data ID_Regard=ID_Regard
	'Commit table Tampon
	'Add Column "Tampon" (Alti_TN)From MNT Set To avg(Alti) Where intersects
	'Commit table Tampon	
	'Add Column "Noeuds_Zone_PC" (Alti_TN)From Tampon Set To Alti_TN Where COL1 = COL1 
	'Commit table Noeuds_Zone_PC
	'Select * from Noeuds_Zone_PC where RESEAU="STEP" into AMettreAJour
	'Update AMettreAJour set Alti_TN=Alti_TN-1
	'Select * from Noeuds_Zone_PC where Alti_TN<0 into AMettreAJour
	'Update AMettreAJour set Alti_TN=0

	'Commit table Noeuds_Zone_PC
	'Drop table Tampon
	'Close table AMettreAJour

print "Elimination des points plus bas que la STEP"
	Fetch first from STEP_Surf_PC
	Do while not EOT (STEP_Surf_PC)
		idn=STEP_Surf_PC.STEP_PC_ID
		Select * from Noeuds_Zone_PC where STEP_PC_ID=idn And RESEAU="STEP" into STEP_PCEnCours
		z=STEP_PCEnCours.Alti_TN
		Select * from Noeuds_Zone_PC where STEP_PC_ID=idn And RESEAU<>"STEP" And Alti_TN<z into AMettreAJour
		Update AMettreAJour set Alti_TN=z+0.5
	Fetch next from STEP_Surf_PC
	Loop
	Commit table Noeuds_Zone_PC

'	Alter table "Noeuds_Zone_PC"( add Exutoire Integer ) Interactive
'------- ligne en commentaire dans version Alex VDP----------------
'------- Modification KC 20181008 ----------------
	'Commit table Noeuds_Zone_PC As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Noeuds_Zone_PC_finale.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
	Commit table Noeuds_Zone_PC As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Noeuds\Noeuds_Zone_PC_finale.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
'-------------------------------------------------
	Select * from Noeuds_Zone_PC where RESEAU="Unitaire" Or RESEAU="STEP" into Noeuds_Unitaires_PC
	Select * from Noeuds_Zone_PC where RESEAU="EU" Or RESEAU="STEP" into Noeuds_EU_PC
'------- Modification KC 20181008 ----------------
	'Commit Table Noeuds_Unitaires_PC As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Noeuds_Unitaires_PC.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
	'Commit Table Noeuds_EU_PC As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Noeuds_EU_PC.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive

	Commit Table Noeuds_Unitaires_PC As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Noeuds\Noeuds_Unitaires_PC.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
	Commit Table Noeuds_EU_PC As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Noeuds\Noeuds_EU_PC.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
'-------------------------------------------------
	Close Table Noeuds_Unitaires_PC
'------- Modification KC 20181008 ----------------
	'Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Noeuds_Unitaires_PC.TAB"
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Noeuds\Noeuds_Unitaires_PC.TAB"
'-------------------------------------------------
	Select * from Noeuds_Unitaires_PC where ID_Regard>990000 into Unit
	Update Unit Set ID_Regard=ID_Regard-990000
	Commit table Noeuds_Unitaires_PC
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'                                                               2.7 Choix des regards EP 
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------	
print "NOEUDS DU RESEAU PLUVIAL"
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'                                                               2.7.1 Choix des regards EP SIAAP
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'print "Création et remplissage de la table de l'ensemble des regards EP potentiels dans la zone"
'	Select  Regards.NUMERO, Regards.Alti_TN, Regards.RESEAU, ZoneHabitat_PC.IDOBJ from Regards, ZoneHabitat_PC where Regards.obj Within ZoneHabitat_PC.obj into RegardsDansLaZone
'	Commit Table RegardsDansLaZone As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Tous_Regards_EP.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
'	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Tous_Regards_EP.TAB" as Tous_Regards_EP
'	Close Table RegardsDansLaZone
'	Alter Table "Tous_Regards_EP" ( add ID_Regard Integer, Dist_Rui float, Dom integer)
'	Alter Table "Tous_Regards_EP" ( rename IDOBJ Osc_PC_ID)
'	Alter Table "Tous_Regards_EP" ( order ID_Regard, NUMERO, RESEAU, Osc_PC_ID, Alti_TN, Dist_Rui, Dom)
'	'Add Column "Tous_Regards_EP" (Alti_TN)From MNT Set To Alti Where contains
'	Update "Tous_Regards_EP" Set ID_Regard=rowid
'	Update "Tous_Regards_EP" Set Dom=1
'	Commit Table Tous_Regards_EP
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'                                                               2.7.1 Choix des regards EP départementaux
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

print "Création et remplissage de la table de l'ensemble des regards EP potentiels dans les Departements"
	Select Regards_EP_dep.NUMERO, Regards_EP_dep.Alti_TN, Regards_EP_dep.RESEAU, ZoneHabitat_PC.IDOBJ from Regards_EP_dep, ZoneHabitat_PC where Regards_EP_dep.obj Within ZoneHabitat_PC.obj into RegardsDansLaZone
'------- Modification KC 20181008 ----------------
	'Commit Table RegardsDansLaZone As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Tous_Regards_EP_dep.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
	'Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Tous_Regards_EP_dep.TAB" as Tous_Regards_EP_dep
	Commit Table RegardsDansLaZone As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Noeuds\Tous_Regards_EP_dep.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Noeuds\Tous_Regards_EP_dep.TAB" as Tous_Regards_EP_dep
'-------------------------------------------------
	Close Table RegardsDansLaZone
	Alter Table "Tous_Regards_EP_dep" ( add ID_Regard Integer, Dist_Rui float, Dom integer)
	Alter Table "Tous_Regards_EP_dep" ( rename IDOBJ Osc_PC_ID)
	Alter Table "Tous_Regards_EP_dep" ( order ID_Regard, NUMERO, RESEAU, Osc_PC_ID, Alti_TN, Dist_Rui, Dom)
	'Add Column "Tous_Regards_EP_dep" (Alti_TN)From MNT Set To Alti Where contains
	Update "Tous_Regards_EP_dep" Set ID_Regard=rowid
	Update "Tous_Regards_EP_dep" Set Dom=2

	Commit Table Tous_Regards_EP_dep

'print "Création de la table des noeuds EP"
'	Select * from Tous_Regards_EP where ID_Regard=1 into NoeudStructurant
'	Commit table NoeudStructurant as "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Noeuds_EP_PC.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
'	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Noeuds_EP_PC.TAB" as Noeuds_EP_PC
'	Alter Table "Noeuds_EP_PC" (add Ordre_Noeud integer)
'	Close Table NoeudStructurant
'	Delete from Noeuds_EP_PC
'	Commit table Noeuds_EP_PC
'	Pack table Noeuds_EP_PC Graphic Data

'--------------- modification test pour privilégier Uni------------------
	'Update ZoneHabitat_PC Set Unitaire=False
	'Update ZoneHabitat_PC Set EU=False
'-------------------------------------------------------------------------
	
'	Fetch First From ZoneHabitat_PC
'	Do while not EOT (ZoneHabitat_PC)
'		idha=ZoneHabitat_PC.IDOBJ
'		Select * from Tous_Regards_EP where Osc_PC_ID=idha order by Alti_TN into RegardsOsc_PC
'		nb = Tableinfo(RegardsOsc_PC , TAB_INFO_NROWS)
'		if nb>0 then
'			Commit Table RegardsOsc_PC as "D:\MOSSET\Desktop\Temporaire\RegardOsc_PC.tab" TYPE NATIVE Charset "WindowsLatin1"
'			Open Table "D:\MOSSET\Desktop\Temporaire\RegardOsc_PC.tab" as RegardOsc_PC
'			Fetch First From RegardOsc_PC
'			idr=RegardOsc_PC.ID_Regard
'			Select * from RegardOsc_PC where ID_Regard=idr into NoeudZone
'			nbr=Tableinfo(NoeudZone , TAB_INFO_NROWS)
'			if (nbr>1) then
'				end program
'			end if
'			Insert Into Noeuds_EP_PC( COL1, COL2, COL3, COL4, COL5, COL6, COL7) Select COL1, COL2, COL3, COL4, COL5, COL6, COL7 From NoeudZone
'			Drop table RegardOsc_PC
'			Select EU from ZoneHabitat_PC where IDOBJ=idha into AMettreAJour
'			Update AMettreAJour set EU=true
'		end if
'	Fetch Next From ZoneHabitat_PC
'	Loop	
'	Commit table Noeuds_EP_PC

	Select * from ZoneHabitat_PC where EU=True or Unitaire=False into ZoneHabitat_dep
   Select * from ZoneHabitat_dep where ZoneHabitat_dep.IDOBJ not in (Select Osc_PC_ID from Noeuds_EP_PC) into ZoneHabitat_Dep_EP
Commit table ZoneHabitat_dep_EP as "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Noeuds\ZoneHabitat_dep_EP.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive

   Close table ZoneHabitat_dep
   Close table ZoneHabitat_dep_EP
   Open table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Noeuds\ZoneHabitat_dep_EP.TAB" as ZoneHabitat_dep

	Fetch First From ZoneHabitat_dep
	Do while not EOT (ZoneHabitat_dep)
		idha=ZoneHabitat_dep.IDOBJ
		Select * from Tous_Regards_EP_dep where Osc_PC_ID=idha order by Alti_TN into RegardsOsc_PC
		nb = Tableinfo(RegardsOsc_PC , TAB_INFO_NROWS)
		if nb>0 then
			Commit Table RegardsOsc_PC as "D:\MOSSET\Desktop\Temporaire\RegardOsc_PC.tab" TYPE NATIVE Charset "WindowsLatin1"
			Open Table "D:\MOSSET\Desktop\Temporaire\RegardOsc_PC.tab" as RegardOsc_PC
			Fetch First From RegardOsc_PC
			idr=RegardOsc_PC.ID_Regard
			Select * from RegardOsc_PC where ID_Regard=idr into NoeudZone
			nbr=Tableinfo(NoeudZone , TAB_INFO_NROWS)
			if (nbr>1) then
				print "Plusieurs regards ont le même ID_Regard dans la Table Tous_Regards_EP_dep"
				end program
			end if
			Insert Into Noeuds_EP_PC( COL1, COL2, COL3, COL4, COL5, COL6, COL7) Select COL1, COL2, COL3, COL4, COL5, COL6, COL7 From NoeudZone
			Drop table RegardOsc_PC
			Select EU from ZoneHabitat_PC where IDOBJ=idha into AMettreAJour
			Update AMettreAJour set EU=true
		end if
	Fetch Next From ZoneHabitat_dep
	Loop	
	Update Noeuds_EP_PC Set ID_Regard=rowid
	Commit table Noeuds_EP_PC
	Commit Table ZoneHabitat_PC
	'-----------------------------------------------------Bug Champ Exutoire deja existant mis en commentaire-----------
	'Alter Table "Noeuds_EP_PC" (add Exutoire Logical) 
	Update Noeuds_EP_PC Set Numero=rowid
	Commit table Noeuds_EP_PC

	Close Table RegardsOsc_PC Interactive

	Close Table AMettreAJour Interactive


print "Calculer table 'Dist_Regard_rivière dans le dossier Table_ini à partir des Noeuds_EP"
print "Fin de la représentation des noeuds"
Close All Interactive
end if
end sub
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'																		3-Calcul des arcs des réseaux unitaires et d'eaux usées																									
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
sub Calcul

	Close all Interactive
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Table ini\Grille_PC.TAB" as Grille_PC
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Table ini\Lignes_Interdites_PC.TAB" as LigneInterdite	
'------- Modification KC 20181008 ----------------
	'Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Noeuds_Zone_PC.TAB" as Noeuds_Zone_PC
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Noeuds\Noeuds_Zone_PC.TAB" as Noeuds_Zone_PC
	Commit table Noeuds_Zone_PC as "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Noeuds_Zone_PC.TAB"
	Close Table Noeuds_Zone_PC
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Noeuds_Zone_PC.TAB" as Noeuds_Zone_PC
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Arcs_SIAAP.TAB" as Arcs_SIAAP
'------- Fin des Modifications KC 20181008 ----------------
	
	'Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\CoefCourt.TAB" Interactive as CoefCourt
	'Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Arcs_Zone_PC.TAB" as Arcs_Zone_PC



Dim CoefCalcul as logical
CoefCalcul=true
'if not CoefCalcul then
'	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Coef.TAB" as Coef
'endif
if CoefCalcul then

print "ARCS DES RESEAUX UNITAIRE ET D'EAUX USEES "
print "Calcul des arcs potentiels"
	Create table "Coef1" (Origine Integer, Destination Integer,Distance_Résultat float,X_ini float, Y_ini Float, X_fin Float, Y_fin float,STEP_PCini Integer, STEP_PCfin Integer)
	Commit table Coef1 as "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Coef.TAB"
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Coef.TAB" as Coef
	Close table Coef1
	
	Set CoordSys Table Noeuds_Zone_PC
	Select * from Noeuds_Zone_PC where Deversoir_Orage=False and Dom<>2 into Noeuds
	Fetch First From Noeuds
	Do while not EOT (Noeuds)
		idn=Noeuds.Id_Regard
		X1=centroidx(Noeuds.obj)
		Y1=centroidy(Noeuds.obj)
		S=Noeuds.STEP_PC_ID
		select Id_Regard "Destination",distance(X1,Y1,centroidx(obj),centroidy(obj),"m")"Distance_Résultat", X1 "X_ini", Y1 "Y_ini",centroidx(obj)"X_fin" ,centroidy(obj)"Y_fin",STEP_PC_ID "STEP_PCfin" from Noeuds into Arc_temporaire
		Commit Table Arc_temporaire as "D:\MOSSET\Desktop\Temporaire\Arc_temp.tab" TYPE NATIVE Charset "WindowsLatin1"
		Open Table "D:\MOSSET\Desktop\Temporaire\Arc_temp.tab" as Arc_temp
		Alter table Arc_temp( add Origine Integer, STEP_PCini Integer order Origine,Destination,Distance_Résultat,X_ini, Y_ini, X_fin,Y_fin, STEP_PCini,STEP_PCfin ) Interactive
		Update Arc_temp set Origine=idn
		Update Arc_temp set STEP_PCini=S
		Insert Into Coef( COL1, COL2,COL3,COL4, COL5,COL6,COL7,COL8,COL9) Select COL1,COL2,COL3,COL4,COL5,COL6,COL7,COL8,COL9 From Arc_temp
		Commit table Coef
		Drop table Arc_temp
		Close table Arc_temporaire
	Fetch Next From Noeuds
	Loop

	Set CoordSys Table Noeuds_Zone_PC
	Select * from Noeuds_Zone_PC where Dom=2 into Noeuds
	Select * from Noeuds_Zone_PC where Deversoir_Orage=False into NoeudsTout
	Fetch First From Noeuds
	Do while not EOT (Noeuds)
		idn=Noeuds.Id_Regard
		X1=centroidx(Noeuds.obj)
		Y1=centroidy(Noeuds.obj)
		S=Noeuds.STEP_PC_ID
		select Id_Regard "Destination",distance(X1,Y1,centroidx(obj),centroidy(obj),"m")"Distance_Résultat", X1 "X_ini", Y1 "Y_ini",centroidx(obj)"X_fin" ,centroidy(obj)"Y_fin",STEP_PC_ID "STEP_PCfin" from NoeudsTout into Arc_temporaire
		Commit Table Arc_temporaire as "D:\MOSSET\Desktop\Temporaire\Arc_temp.tab" TYPE NATIVE Charset "WindowsLatin1"
		Open Table "D:\MOSSET\Desktop\Temporaire\Arc_temp.tab" as Arc_temp
		Alter table Arc_temp( add Origine Integer, STEP_PCini Integer order Origine,Destination,Distance_Résultat,X_ini, Y_ini, X_fin,Y_fin, STEP_PCini,STEP_PCfin ) Interactive
		Update Arc_temp set Origine=idn
		Update Arc_temp set STEP_PCini=S
		Insert Into Coef( COL1, COL2,COL3,COL4, COL5,COL6,COL7,COL8,COL9) Select COL1,COL2,COL3,COL4,COL5,COL6,COL7,COL8,COL9 From Arc_temp
		Commit table Coef
		Drop table Arc_temp
		Close table Arc_temporaire
	Fetch Next From Noeuds
	Loop
	
	Close Table NoeudsTout
	Close Table Noeuds

print "Suppression des arcs impossibles"		
	Select * from Coef where Distance_Résultat=0 into ASupprimer
print "table coef select ok"
	Delete from ASupprimer
	Commit table Coef
print "table Coef ok"
'----------------------------------------------to check Table Coef----------
'----------------------------------------------added Graphic data-------------------------------
	pack table Coef Graphic Data	
	Select * from Coef where STEP_PCini<>STEP_PCfin into ASupprimer
print "table coef select STEP ok"
	Delete from ASupprimer
	Commit table Coef
	pack table Coef Data
	if Cnx_Unit_EU=0 then
		Select * from Coef where Origine>990000 and Destination<990000 into ASupprimer
		Delete from ASupprimer
		Commit table Coef
		pack table Coef Data
	end if
print "suppression arcs impossibles ok"


print "Check-in des lignes interdites"
	nb=Tableinfo(LigneInterdite, TAB_INFO_NROWS)
	if (nb<>0) then
		Create Map For Coef Using Noeuds_Zone_PC 
		Set CoordSys Table Noeuds_Zone_PC
		Update Coef set obj= createline(X_ini,Y_ini,X_fin,Y_fin)
		commit table Coef
		Alter table Coef (add Supprimer Logical)
		commit table Coef
		Select * from Coef, LigneInterdite where Coef.Obj Intersects LigneInterdite.Obj into ASupprimer
		Update ASupprimer set Supprimer=True
		Select* from Coef where Supprimer=True into ASupprimer1
		Delete from ASupprimer1
		Commit table Coef
		Pack table Coef Graphic Data
		drop map Coef
		Alter table Coef (drop Supprimer)
		Commit table Coef
		print "Fin de la suppression des arcs interdits"
	end if


print "Remplissage de la table Coef"
	Alter Table "Coef" (add Zini Float,Zfin Float,DistSTEP_PCini Float,DistSTEP_PCfin Float,Pente Float,RapprochementSTEP_PC Float, ResDistance float, Coefficient Float order Origine,Destination,Zini,Zfin,DistSTEP_PCini,DistSTEP_PCfin,Distance_Résultat,Pente,RapprochementSTEP_PC, ResDistance, Coefficient) Interactive
	Add Column "Coef" (Zini)From Noeuds_Zone_PC Set To Alti_TN Where COL1 = COL1 
	Add Column "Coef" (Zfin)From Noeuds_Zone_PC Set To Alti_TN Where COL2 = COL1 
	Add Column "Coef" (DistSTEP_PCini )From Noeuds_Zone_PC Set To Dist_STEP Where COL1 = COL1 
	Add Column "Coef" (DistSTEP_PCfin )From Noeuds_Zone_PC Set To Dist_STEP Where COL2 = COL1 
	Commit Table Coef Interactive

print "Correction des altitudes et distances nulles"
	Select * from Coef where Zini=0 into AModifier
	Update AModifier set Zini=0.001
	Select * from Coef where DistSTEP_PCini =0 into AModifier
	Update AModifier set DistSTEP_PCini=0.001
	Commit table Coef
	Close table AModifier

Commit Table Coef As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Coef_finale.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive

print "Calcul des coefficients"
	Update Coef Set Pente = (Zini-Zfin)/Zini
	'Update Coef Set RapprochementSTEP_PC = (DistSTEP_PCini-DistSTEP_PCfin)/DistSTEP_PCini
	'Update Coef set ResDistance=Res/Distance_Résultat
	Commit Table Coef Interactive

End if 			'--------------- fin du calcul de la table Coef -----------------------

print "suppression des arcs différents du SIAAP" 
Do while not EOT (Arcs_SIAAP)
	ido=Arcs_SIAAP.Point_ini
	idd=Arcs_SIAAP.Point_fin
	select count(*) from Coef where Destination=idd into Averifier1
	select count(*) from Coef where Origine=ido into Averifier2
	if (Averifier1.count>0 and Averifier2.count>0) then
		Select * from Coef where Origine=ido and Destination<>idd into ASupprimer
		Delete from ASupprimer
		Commit Table Coef
		Pack Table Coef Graphic Data
	End if
	Fetch Next from Arcs_SIAAP
Loop
print "arcs du SIAAP ok" 


print "création table Coef Court"
	Select * from Coef where Distance_Résultat < 3*Res into CoefCourt1
	Commit Table CoefCourt1 As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\CoefCourt.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\CoefCourt.TAB" Interactive as CoefCourt
	Close Table CoefCourt1 Interactive		

print "Création de la table des arcs"
	Create Table "Arcs" (Id_Arc Integer, Point_ini Integer,Point_fin Integer, STEP_PC Logical, DO Logical, SR Logical, PB Logical, Coefficient float, Arc_Aval Integer, Exutoire Integer, Longueur float, Distance_Exutoire float)
	Create Map For Arcs Using Noeuds_Zone_PC 
	Commit Table Arcs As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Arcs_Zone_PC.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Arcs_Zone_PC.TAB" as Arcs_Zone_PC
	Close Table Arcs	

print "Représentation des arcs avals des stations de relevage"
	i=Tableinfo(Arcs_Zone_PC , TAB_INFO_NROWS)
	i=i+1
	set coordsys table Noeuds_Zone_PC
	Select * from Noeuds_Zone_PC where StationR=true order by Dist_STEP desc into StationR
	Select * from Noeuds_Zone_PC where StationR=true or Deversoir_orage=true into Ouvragesspeciaux
	Commit table StationR as "D:\MOSSET\Desktop\Temporaire\StationR.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
	Close Table StationR
	Open Table "D:\MOSSET\Desktop\Temporaire\StationR.TAB" as StationR
	Fetch First From StationR
	Do while not EOT (StationR)
		idn=StationR.ID_Regard
'------------------------verification 19/07---------------------------------------------------
		Print idn
		Select * from CoefCourt where Origine=idn and pente<0 and CoefCourt.Destination not in (Select ID_Regard from Noeuds_Zone_PC where StationR=true or Deversoir_orage=true) order by Distance_Résultat into ArcsPossibles
		nb = Tableinfo(ArcsPossibles , TAB_INFO_NROWS)
		If nb > 0 then					
				Select * from Noeuds_Zone_PC where ID_Regard = idn into Noeud
				Xini = centroidx(Noeud.obj)
				Yini = centroidy(Noeud.obj)
				m= Noeud.ID_maille
				Close Table Noeud
				Fin=0
				if nb > 0 then 
					Fetch first from ArcsPossibles
					Fin=ArcsPossibles.Destination
					'co=ArcsPossibles.Coefficient
					Select * from Noeuds_Zone_PC where ID_Regard=Fin into Noeud
					ID=Noeud.ID_maille
					Do while ID=m
						Fetch next from ArcsPossibles
						Fin=ArcsPossibles.Destination
						Select * from Noeuds_Zone_PC where ID_Regard=Fin into Noeud
						ID=Noeud.ID_maille
					Loop
				end if
				if Fin=0 then
					Select * from Noeuds_Zone_PC where ID_Regard=idn into Asupprimer
					print "Station de relevage" &idn & "supprimée"
					Delete from Asupprimer
					Commit table Noeuds_Zone_PC
					Pack table Noeuds_Zone_PC Graphic Data		
					Select * from Coef where Origine=idn or Destination=idn into Asupprimer
					Delete from Asupprimer

					Commit table Coef
					Pack table Coef Graphic Data	
					Select * from CoefCourt where Origine=idn or Destination=idn into Asupprimer
					Delete from Asupprimer
					Commit table CoefCourt
					Pack table CoefCourt Graphic Data			
				end if
				if Fin<>0 then 		
					Select * from Noeuds_Zone_PC where ID_Regard=Fin into RFin
					Xfin = centroidx(RFin.obj)
					Yfin = centroidy(RFin.obj)	
					Close Table RFin
					Insert Into Arcs_Zone_PC (COL1) Values ( i )
					Select * from Arcs_Zone_PC where Id_Arc=i into Arc_ZoneenCours
					update Arc_ZoneenCours set Point_ini=idn
					update Arc_ZoneenCours set Point_fin=fin
					update Arc_ZoneenCours set SR=True
					update Arc_ZoneenCours set Coefficient=co
					update Arc_ZoneenCours set obj= createline(Xini,Yini,Xfin,Yfin)
					Select * from Arcs_Zone_PC where Point_ini=Fin into Aval
					nb = Tableinfo(Aval, TAB_INFO_NROWS)
					if nb=2 then
						Fetch first from Aval
						if Aval.DO=True then
							Fetch next from Aval
						end if
					end if
					if nb=0 then 
						exu=Fin
						av=-1000
					else
						exu=Aval.Exutoire
						av=Aval.Id_Arc
					end if
					if exu=idn then
						print "erreur : la connexion s'est faite au même exutoire"
						end program
					end if
					update Arc_ZoneenCours set Exutoire=exu
					update Arc_ZoneenCours set Arc_Aval=av
					Select StationR, STEP_PC from Noeuds_Zone_PC where Id_Regard=fin into Station
					relevement=Station.StationR
					S=Station.STEP_PC
					If relevement =true then
						update Arc_ZoneenCours set SR=True
					elseif S =true then
						Update Arc_ZoneenCours set STEP_PC=True
					end if
					Select Exutoire from Arcs_Zone_PC where Exutoire=idn  into AMettreAJour
					Update AMettreAJour Set Exutoire=exu		
					Select Exutoire from Noeuds_Zone_PC where Exutoire=idn into AMettreAJour
					Update AMettreAJour Set Exutoire=exu
					Select Id_Arc, Arc_Aval from Arcs_Zone_PC where Point_fin=idn into ArcAmont
					Update ArcAmont set Arc_Aval=i
					i=i+1
				end if
			else
				Select * from Noeuds_Zone_PC where ID_Regard=idn into Asupprimer
				print "Station de relevage" &idn & "supprimée"
				Delete from Asupprimer
				Commit table Noeuds_Zone_PC
				Pack table Noeuds_Zone_PC Graphic Data		
				Select * from Coef where Origine=idn or Destination=idn into Asupprimer
				Delete from Asupprimer
				Commit table Coef
				Pack table Coef Graphic Data	
				Select * from CoefCourt where Origine=idn or Destination=idn into Asupprimer
				Delete from Asupprimer
				Commit table CoefCourt
				Pack table CoefCourt Graphic Data				
			end if
		Fetch next from StationR
	Loop
	Commit table Arcs_Zone_PC
	commit table Coef
	commit table CoefCourt
	commit table Noeuds_Zone_PC
	Drop table StationR

print "Représentation des arcs joignant le regard de sortie d'une maille aux ouvrages spéciaux situés dans cette maille"
	set coordsys table Noeuds_Zone_PC
	i=Tableinfo(Arcs_Zone_PC , TAB_INFO_NROWS)
	i=i+1
print "Table Grille_PC déjà modifiée, sinon décommenter Alter table Grille_PC (add Fait Logical)"
	Alter table Grille_PC (add Fait Logical) 
	select * from Noeuds_Zone_PC where RESEAU="STEP" Or StationR=1 Or Deversoir_Orage=1 into Ouvrage
	Fetch First From Ouvrage
	Do while not EOT (Ouvrage)
		ido=Ouvrage.ID_Regard
		Select * from Noeuds_Zone_PC where ID_Regard=ido into Rfin
		Xfin = centroidx(Rfin.obj)
		Yfin = centroidy(Rfin.obj)	
		AltiDo=Rfin.Alti_TN
		Commit Table Rfin As "D:\MOSSET\Desktop\Temporaire\Rfin.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
		Close table Rfin

		Open Table "D:\MOSSET\Desktop\Temporaire\Rfin.TAB" Interactive
		Select * from Grille_PC, Rfin where Grille_PC.Obj Contains Rfin.Obj into MailleO
		if MailleO.Fait=0 then
			Update MailleO set Fait=1	
			Commit Table MailleO As "D:\MOSSET\Desktop\Temporaire\MailleO.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
			close table MailleO
			Open Table "D:\MOSSET\Desktop\Temporaire\MailleO.TAB" Interactive
			Select * from Noeuds_Zone_PC, MailleO where Noeuds_Zone_PC.obj within MailleO.obj And Noeuds_Zone_PC.ID_Regard not in (Select ID_Regard from Ouvrage)into Naval
			nb=Tableinfo(Naval , TAB_INFO_NROWS)
			if nb=1 then
				idn=Naval.ID_Regard
				AltiReg=Naval.Alti_TN
				Select * from Noeuds_Zone_PC where ID_Regard=idn into Rini
				Xini = centroidx(Rini.obj)
				Yini = centroidy(Rini.obj)
				Select * from Noeuds_Zone_PC where ID_Regard=ido into Ouv
				Update Ouv Set RESEAU="OS"
				Close Table Rini
				Close table Ouv
				Insert Into Arcs_Zone_PC (COL1) Values ( i )
				Select * from Arcs_Zone_PC where Id_Arc =i into Arc_ZoneenCours
				update Arc_ZoneenCours set Point_ini=idn
				update Arc_ZoneenCours set Point_fin=ido
				update Arc_ZoneenCours set Coefficient=0
				update Arc_ZoneenCours set obj= createline(Xini,Yini,Xfin,Yfin)
				Select * from Ouvrage where Ouvrage.ID_Regard=ido into OuvrageenCours
				if Ouvrageencours.Deversoir_Orage=1 then
					update Arc_ZoneenCours set DO=true
				elseif Ouvrageencours.StationR=1 then
					update Arc_ZoneenCours set SR=true
				elseif Ouvrageencours.RESEAU="STEP" then
					update Arc_Zoneencours set STEP=true
				end if
				i=i+1
				close table Arc_ZoneenCours
				close table Ouvrageencours
'print" close AMettreAJour en commentaire: si pb voir ligne 1002"
				'Close table AMettreAJour
			elseif nb>1 then 				
				print "Plus de 2 ouvrages dans une même maille : l'ouvrage concerné est" & ido
				Select * from Naval where STEP_PC_ID<>0 And StationR<>1 And Deversoir_Orage<>1 into Pointav
				idn=Pointav.ID_Regard
				AltiReg=Pointav.Alti_TN
				close table Pointav
				Select * from Noeuds_Zone_PC where ID_Regard=idn into Rini
				Xini = centroidx(Rini.obj)
				Yini = centroidy(Rini.obj)	
				Close Table Rini
				D1 = Distance(Xini,Yini,Xfin,Yfin,"m")
				Insert Into Arcs_Zone_PC (COL1) Values ( i )
				Select * from Arcs_Zone_PC where Id_Arc =i into Arc_ZoneenCours
				update Arc_ZoneenCours set Point_ini=idn
				update Arc_ZoneenCours set Point_fin=ido
				Select * from Ouvrage where Ouvrage.ID_Regard=ido into OuvrageenCours
				if Ouvrageencours.Deversoir_Orage=1 then
					update Arc_ZoneenCours set DO=true
				elseif Ouvrageencours.StationR=1 then
					update Arc_ZoneenCours set SR=true
				elseif Ouvrageencours.RESEAU="STEP" then
					update Arc_Zoneencours set STEP_PC=true
				end if
				update Arc_ZoneenCours set Coefficient=0
				update Arc_ZoneenCours set obj= createline(Xini,Yini,Xfin,Yfin)
				i=i+1
				close table Arc_ZoneenCours
				Select * from Coef where Origine=ido into AMettreAJour		'On remplace l'altitude de l'ouvrage dans la table coef afin qu'ils ne soit pas exclu des connexions et pour éviter les boucles
				Update AMettreAJour set Zini=AltiReg
				Close table AMettreAJour
			end if
			Drop table MailleO
		end if
		Drop table Rfin
		Fetch Next From Ouvrage
	Loop
	Commit table Grille_PC
	Alter table Grille_PC (Drop Fait)
	close table Ouvrage
	commit table Arcs_Zone_PC
	commit table Coef

	Select * from Noeuds_Zone_PC where StationR=true and Reseau="Point" into StationsASupprimer
	Select * from Arcs_Zone_PC where Point_ini in (Select ID_Regard from StationsASupprimer) into ASupprimer
	Delete from ASupprimer
	Commit table Arcs_Zone_PC
	Pack table Arcs_Zone_PC graphic Data
	Select * from Coef where Origine in(Select ID_Regard from StationsASupprimer) into Asupprimer
	Delete from Asupprimer
	Commit table Coef
	Select * from Coef where Destination in (Select ID_Regard from StationsASupprimer) into Asupprimer
	Delete from Asupprimer
	Commit table Coef
	Pack table Coef Graphic Data	
	Select * from CoefCourt where Origine in(Select ID_Regard from StationsASupprimer) into Asupprimer
	Delete from Asupprimer
	Commit table CoefCourt
	Select * from CoefCourt where Destination in(Select ID_Regard from StationsASupprimer) into Asupprimer
	Delete from Asupprimer
	Commit table CoefCourt
	Pack table CoefCourt Graphic Data	

	Delete from StationsASupprimer
	Commit table Noeuds_Zone_PC
	Select * from Noeuds_Zone_PC where Deversoir_orage=true and reseau="point" into ASupprimer
	Delete from ASupprimer
	Commit table Noeuds_Zone_PC
	Pack table Noeuds_Zone_PC graphic Data

print "Sélection suivant Distance_Résultat < 3*Res"	
	i=Tableinfo(Arcs_Zone_PC, TAB_INFO_NROWS)
	i=i+1
	Select * from Noeuds_Zone_PC where Noeuds_Zone_PC.StationR=false And Noeuds_Zone_PC.Deversoir_Orage=false And Noeuds_Zone_PC.Reseau not like "STEP" order by Dist_STEP desc into Regards
	Fetch First From Regards
	Do while not EOT (Regards)
		idn=Regards.ID_Regard
		Select * from Arcs_Zone_PC where Point_ini=idn into DejaCalcule
		nb = Tableinfo(DejaCalcule , TAB_INFO_NROWS)
		close table DejaCalcule
		dev=Arcs_Zone_PC.DO
		If nb=0 Or dev=True then						'L'arc sortant n'a pas été calculé
			Select * from CoefCourt where Origine=idn and ( pente>0 or pente =0) order by Distance_Résultat into ArcsPossibles 
			nb = Tableinfo(ArcsPossibles , TAB_INFO_NROWS)
			If nb > 0 then						
				Select * from Noeuds_Zone_PC where ID_Regard = idn into Noeud
				Xini = centroidx(Noeud.obj)
				Yini = centroidy(Noeud.obj)
				Close table Noeud	
					Fetch first from ArcsPossibles
					Fin=ArcsPossibles.Destination
					Select * from Arcs_Zone_PC where Point_ini=Fin And Point_fin=idn into Boucle		'Suppression du risque de boucle
					nb = Tableinfo(Boucle , TAB_INFO_NROWS)
					Do while nb<>0
						Fetch next from ArcsPossibles
						Fin=ArcsPossibles.Destination
						Select * from Arcs_Zone_PC where Point_ini=Fin And Point_fin=idn into Boucle
						nb = Tableinfo(Boucle , TAB_INFO_NROWS)
					Loop
					Select * from Arcs_Zone_PC where Point_ini=Fin into GBoucle			'Suppression du risque de boucle
					nb = Tableinfo(GBoucle , TAB_INFO_NROWS)
					Do while nb <> 0 
						if nb=2 then
							Fetch first from GBoucle
							if GBoucle.DO=True then
								Fetch next from GBoucle
							end if
						end if
						Fin=GBoucle.Point_fin 
						if Fin=idn then
							Fetch next from ArcsPossibles
							Fin=ArcsPossibles.Destination	
						end if						
						Select * from Arcs_Zone_PC where Point_ini=Fin into GBoucle	
						nb = Tableinfo(GBoucle, TAB_INFO_NROWS)
					Loop
					Fin=ArcsPossibles.Destination
					if Fin<>0 then
						Select * from Noeuds_Zone_PC where ID_Regard=Fin into RFin
						Xfin = centroidx(RFin.obj)
						Yfin = centroidy(RFin.obj)	
						Close Table RFin
						Insert Into Arcs_Zone_PC (COL1) Values ( i )
						Select * from Arcs_Zone_PC where Id_Arc =i into Arc_ZoneenCours
						update Arc_ZoneenCours set Point_ini=idn
						update Arc_ZoneenCours set Point_fin=fin
						update Arc_ZoneenCours set obj= createline(Xini,Yini,Xfin,Yfin)
						i=i+1
					else 
						Select * from Noeuds_Zone_PC where ID_Regard=idn into PointBas
						Update PointBas set Point_Bas=true
					end if 
			Else
				Select * from Noeuds_Zone_PC where ID_Regard=idn into PointBas
				Update PointBas set Point_Bas=true
			end if
		end if
	Fetch Next From Regards
	Loop
	Commit table Arcs_Zone_PC

print "Calcul des arcs avals dans Arcs_Zone_PC"	
	Fetch first from Arcs_Zone_PC
	Do while not EOT (Arcs_Zone_PC)
		i=Arcs_Zone_PC.Id_Arc
		fin=Arcs_Zone_PC.Point_fin	
		Select * from Arcs_Zone_PC where Point_ini=fin into Aval
		nb=Tableinfo(Aval, TAB_INFO_NROWS)
		If nb = 1 then
			dev=Aval.DO
			if dev=true then
				Select Exutoire,PB from Arcs_Zone_PC where Id_Arc=i into AmettreAJour
				Update AmettreAJour set PB=true
				Update AmettreAJour set Exutoire=fin
			else
				av=Aval.Id_Arc
				Select Arc_aval from Arcs_Zone_PC where Id_Arc=i into AmettreAJour
				Update AmettreAJour set Arc_aval=av
			end if
		elseif nb=0 then
			Select StationR, Point_Bas, Deversoir_Orage, STEP_PC from Noeuds_Zone_PC where Id_Regard=fin into Station
			relevement=Station.StationR
			PointB=Station.Point_Bas
			Devers=Station.Deversoir_Orage
			S=Station.STEP_PC
			If relevement =true then
				Select Exutoire,Arc_Aval from Arcs_Zone_PC where Id_Arc=i into AmettreAJour
				Update AmettreAJour set Exutoire=fin
			elseif PointB =true then
				Select Exutoire,PB from Arcs_Zone_PC where Id_Arc=i into AmettreAJour
				Update AmettreAJour set PB=true
				Update AmettreAJour set Exutoire=fin
			elseif Devers=true then
				Select Exutoire,Arc_Aval from Arcs_Zone_PC where Id_Arc=i into AmettreAJour
				Update AmettreAJour set Exutoire=fin
				Update AmettreAJour set Arc_Aval=-1000
			elseif S =true then
				Select Exutoire,Arc_Aval from Arcs_Zone_PC where Id_Arc=i into AmettreAJour
				Update AmettreAJour set Exutoire=fin
				Update AmettreAJour set Arc_Aval=-1000
			else 
				print "Attention le tronçon " & i & " n'a pas d'arc aval alors qu'il ne mène ni vers un ouvrage spécial ni vers un point bas"
				end program
			end if
		elseif nb=2 then
			Fetch first from Aval
			dev=Aval.DO
			if dev=true then
				fetch next from Aval
			end if
			av=Aval.Id_Arc
			Select Arc_aval from Arcs_Zone_PC where Id_Arc=i into AmettreAJour

			Update AmettreAJour set Arc_aval=av
		elseif nb>2 then
			print "Attention, plus de 2 arcs avals au tronçon " & i & ". Erreur !!!!"
			end program
			end if
	Fetch next from Arcs_Zone_PC
	Loop
	Commit table Arcs_Zone_PC
	Commit table Noeuds_Zone_PC

print "Calcul des exutoires"
	Fetch first from Arcs_Zone_PC

	Do while not EOT (Arcs_Zone_PC)
		i=Arcs_Zone_PC.Id_Arc
		ex=Arcs_Zone_PC.Exutoire
		av=Arcs_Zone_PC.Arc_Aval
		If ex=0 then
			If av=0 then
				print " Erreur arc aval inexistant!!!"
				end program
			end if
			Do while ex=0
				Select Arc_Aval,Exutoire from Arcs_Zone_PC where Id_Arc=av into Aval
				av=Aval.Arc_Aval
				ex=Aval.Exutoire
			Loop
			Select Exutoire from Arcs_Zone_PC where Id_Arc=i into AMettreAJour
			Update AMettreAJour set Exutoire=ex
		end if
	Fetch next from Arcs_Zone_PC
	Loop
	Commit table Arcs_Zone_PC
	Commit Table Coef Interactive
	Close Table CoefCourt

	Add Column "Noeuds_Zone_PC" (Exutoire )From Arcs_Zone_PC Set To Exutoire Where COL1 = COL3
	Commit table Noeuds_Zone_PC
	Select * from Noeuds_Zone_PC where Exutoire=0 into AConnecter
	Add Column "AConnecter" (Exutoire)From Arcs_Zone_PC Set To Exutoire  Where COL1 = COL2
	Commit table Noeuds_Zone_PC
	Select * from Noeuds_Zone_PC where Exutoire=0 into AConnecter
	Update AConnecter set Exutoire=ID_Regard
	Commit table Noeuds_Zone_PC
	Alter Table "Coef" ( add Exutoire Integer ) Interactive
	Add Column "Coef" (Exutoire )From Noeuds_Zone_PC Set To Exutoire Where COL2 = COL1
	Commit table Coef

print "Représentation des arcs sortant des Points Bas"
	i=Tableinfo(Arcs_Zone_PC , TAB_INFO_NROWS)
	i=i+1
	Select * from Noeuds_Zone_PC where Point_Bas=true order by Dist_STEP desc into PointBas
	Fetch First From PointBas
	Do while not EOT (PointBas)
		idn=PointBas.ID_Regard
		Select * from Noeuds_Zone_PC where ID_Regard = idn into Noeud
		Xini=centroidx(Noeud.obj)
		Yini=centroidy(Noeud.obj)
		Close table Noeud

			Select * from Coef where Origine=idn And Exutoire<>idn order by Distance_Résultat into ArcsPossibles
			nb = Tableinfo(ArcsPossibles , TAB_INFO_NROWS)
			If nb<>0 then			'Le point est connecté mais plus loin que 3*Rés
				Fetch first from ArcsPossibles
				Fin=ArcsPossibles.Destination
				co=-999
				Select * from Arcs_Zone_PC where Point_ini=Fin into GBoucle			'Suppression du risque de boucle
				nb = Tableinfo(GBoucle , TAB_INFO_NROWS)
				Do while nb <> 0 
					if nb=2 then
						Fetch first from GBoucle
						if GBoucle.DO=True then
							Fetch next from GBoucle
						end if
					end if
					if Fin=idn then
						Fetch next from ArcsPossibles
						Fin=ArcsPossibles.Destination	
					end if						
					Select * from Arcs_Zone_PC where Point_ini=Fin into GBoucle
					Fin=GBoucle.Point_fin 	
					nb = Tableinfo(GBoucle, TAB_INFO_NROWS)
				Loop
				Fin=ArcsPossibles.Destination
			end if
		if Fin <> 0 then 
			Select * from Arcs_Zone_PC where Point_ini=Fin into Aval
			nb = Tableinfo(Aval, TAB_INFO_NROWS)
			if nb=2 then
				Fetch first from Aval
				if Aval.DO=True then
					Fetch next from Aval
				end if
			end if
			if nb=0 then 
				exu=Fin
				av=-1000

			else
				exu=Aval.Exutoire
				av=Aval.Id_Arc
			end if
			if exu=idn then
				print "erreur : la connexion s'est faite au même exutoire"
				end program
			end if
			Select * from Noeuds_Zone_PC where ID_Regard=Fin into RFin
			Xfin = centroidx(RFin.obj)
			Yfin = centroidy(RFin.obj)	
			Close Table RFin
			Insert Into Arcs_Zone_PC (COL1) Values ( i )
			Select * from Arcs_Zone_PC where Id_Arc =i into Arc_ZoneenCours
			update Arc_ZoneenCours set Point_ini=idn
			update Arc_ZoneenCours set Point_fin=fin
			update Arc_ZoneenCours set Coefficient=co
			update Arc_ZoneenCours set Arc_Aval=av
			update Arc_ZoneenCours set obj= createline(Xini,Yini,Xfin,Yfin)
			update Arc_ZoneenCours set Exutoire=exu
			update Arc_ZoneenCours set PB=True
			Select StationR, STEP_PC from Noeuds_Zone_PC where Id_Regard=fin into Station
			relevement=Station.StationR
			S=Station.STEP_PC
			If relevement =true then
				update Arc_ZoneenCours set SR=True
			elseif S =true then
				Update Arc_ZoneenCours set STEP_PC=True
			end if
			i=i+1
			Select Exutoire from Arcs_Zone_PC where Exutoire=idn  into AMettreAJour
			Update AMettreAJour Set Exutoire=exu		
			Select Exutoire from Coef where Exutoire=idn into AMettreAJour
			Update AMettreAJour Set Exutoire=exu
			Select Exutoire from Noeuds_Zone_PC where Exutoire=idn into AMettreAJour
			Update AMettreAJour Set Exutoire=exu
			Select Arc_Aval from Arcs_Zone_PC where Point_fin=idn into AMettreAJour
			Update AMettreAJour Set Arc_Aval=i-1
		else
			print "Point bas " & idn & " sans connexion"
		end if
		Fetch Next From PointBas
	loop
	Commit table Arcs_Zone_PC
	commit table Coef
	commit table Noeuds_Zone_PC
	Alter Table "Coef" ( drop Exutoire ) Interactive

	Update Arcs_Zone_PC Set Longueur = CartesianObjectLen(obj, "m")
	Commit table Arcs_Zone_PC

 	Select * from Noeuds_Zone_PC where Deversoir_orage=false and STEP_PC=false into Noeuds
	Select * from Noeuds where ID_Regard not in (Select Point_ini from Arcs_Zone_PC ) into SansArcs
	nb=Tableinfo(SansArcs, TAB_INFO_NROWS)
	if nb>0 then
		print "Noeuds sans arcs"
		end program
	end if

print "Création des tables par type de réseau"
	Alter Table "Arcs_Zone_PC" ( add Unitaire Logical, EU Logical, Dom integer)
	Select * from Arcs_Zone_PC where Point_ini>990000 into Unit
	Update Unit Set Unitaire=1
	Commit table Arcs_Zone_PC
	Update Unit Set Point_ini=Point_ini-990000
	Select * from Arcs_Zone_PC where Unitaire=0 into SEP
	Update SEP Set EU=1
	Select * from Arcs_Zone_PC where Point_fin>990000 into Unit
	Update Unit Set Point_fin=Point_fin-990000
	Commit table Arcs_Zone_PC
	Select * from Noeuds_Zone_PC where ID_Regard>990000 into Unit
	Update Unit Set ID_Regard=ID_Regard-990000
	Commit table Noeuds_Zone_PC
	Select * from Arcs_Zone_PC where Unitaire=1 into Arcs_Unitaires_PC
	Select * from Arcs_Zone_PC where EU=1 into Arcs_EU_PC	
	Commit Table Arcs_Unitaires_PC As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Arcs_Unitaires_PC.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
	Commit Table Arcs_EU_PC As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Arcs_EU_PC.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
	
	Update Arcs_Zone_PC Set Dom=1
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Noeuds\Tous_Regards_dep.TAB" as Tous_Regards_dep
	Select * from Arcs_Zone_PC, Tous_Regards_dep where Arcs_Zone_PC.obj intersects Tous_Regards_dep.obj into DEPT
	Update DEPT Set Dom=2
	Commit table Arcs_Zone_PC
	Select * from Arcs_Zone_PC where Dom=2 into Arcs_dep
	Select * from Arcs_Zone_PC where Dom=1 into Arcs_interdep	
	Commit Table Arcs_dep As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Arcs_dep.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
	Commit Table Arcs_interdep As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Arcs_interdep.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive

	
	Close All Interactive

'end if	
print "Fin de calcul des arcs des réseaux unitaires et d'eaux usées"

end sub

	
'_______________________________________________________________________________________________________________________________________________________________________________________________________
'																4-Calcul des arcs du réseau d'eaux pluviales
'_________________________________________________________________________________________________________________________________________________________________________________________________________


sub Calcul_EP

	Close all Interactive
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Table ini\Lignes_Interdites_PC_EP.TAB" as LigneInterdite
'	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Noeuds_EP_PC.TAB" as Noeuds_EP_PC
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Noeuds\Noeuds_EP_PC.TAB" as Noeuds_EP_PC

''''Table Dist_regard_Riviere créée en calculant les distances entres Noeuds_EP_PC et BD_Carthage (Origine=Numero Dest=ID_Arc) 
'Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Table ini\Dist_regard_Riviere.TAB" as DistRE
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Table ini\Dist_NoeudsEP_Riviere.TAB" as DistRE
	Commit Table DistRE As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Jonction_regard_Riviere.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Jonction_regard_Riviere.TAB" as DistREP

print "ARCS DU RESEAU D'EAUX PLUVIALES"
Dim Fait as Logical
Fait=0
if Fait=0 then


	Alter Table "DistREP" (modify Origine Float)
	Alter Table "DistREP" (modify Destination Float)
	Commit table Noeuds_EP_PC
	Add Column "Noeuds_EP_PC" (Dist_Rui)From DistREP Set To Distance_Résultat Where Numero = Origine 
	Commit table Noeuds_EP_PC
	Update Noeuds_EP_PC Set Exutoire=false
	Commit table Noeuds_EP_PC

print "Calcul des arcs potentiels"
	Create table "CoefEP1" (Origine Integer, Destination Integer,Distance_Résultat float,X_ini float, Y_ini Float, X_fin Float, Y_fin float,Dist_Rui_ini float, Dist_Rui_fin float)
	Commit table CoefEP1 as "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\CoefEP.TAB"
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\CoefEP.TAB" as CoefEP
	Close table CoefEP1
	
	Set CoordSys Table Noeuds_EP_PC
	Select * from Noeuds_EP_PC where Dom<>2 into Noeuds
	Fetch First From Noeuds
	Do while not EOT (Noeuds)
		idn=Noeuds.Id_Regard
		X1=centroidx(Noeuds.obj)
		Y1=centroidy(Noeuds.obj)
		Dist=Noeuds.Dist_Rui
		select Id_Regard "Destination",distance(X1,Y1,centroidx(obj),centroidy(obj),"m")"Distance_Résultat", X1 "X_ini", Y1 "Y_ini",centroidx(obj)"X_fin" ,centroidy(obj)"Y_fin", Dist_Rui "Dist_Rui_fin" from Noeuds into Arc_temporaire
		Commit Table Arc_temporaire as "D:\MOSSET\Desktop\Temporaire\Arc_temp.tab" TYPE NATIVE Charset "WindowsLatin1"
		Open Table "D:\MOSSET\Desktop\Temporaire\Arc_temp.tab" as Arc_temp
		Alter table Arc_temp( add Origine Integer,Dist_Rui_ini float order Origine,Destination,Distance_Résultat,X_ini,Y_ini,X_fin,Y_fin,Dist_Rui_ini,Dist_Rui_fin) Interactive
		Update Arc_temp set Origine=idn
		Update Arc_temp set Dist_Rui_ini=Dist
		Insert Into CoefEP( COL1, COL2,COL3,COL4, COL5,COL6,COL7,COL8,COL9) Select COL1,COL2,COL3,COL4,COL5,COL6,COL7,COL8,COL9 From Arc_temp
		Commit table CoefEP
		Drop table Arc_temp
		Close table Arc_temporaire
	Fetch Next From Noeuds
	Loop

Set CoordSys Table Noeuds_EP_PC
	Select * from Noeuds_EP_PC where Dom=2 into Noeuds
	Fetch First From Noeuds
	Do while not EOT (Noeuds)
		idn=Noeuds.Id_Regard
		X1=centroidx(Noeuds.obj)
		Y1=centroidy(Noeuds.obj)
		Dist=Noeuds.Dist_Rui
		select Id_Regard "Destination",distance(X1,Y1,centroidx(obj),centroidy(obj),"m")"Distance_Résultat", X1 "X_ini", Y1 "Y_ini",centroidx(obj)"X_fin" ,centroidy(obj)"Y_fin", Dist_Rui "Dist_Rui_fin" from Noeuds_EP_PC into Arc_temporaire
		Commit Table Arc_temporaire as "D:\MOSSET\Desktop\Temporaire\Arc_temp.tab" TYPE NATIVE Charset "WindowsLatin1"
		Open Table "D:\MOSSET\Desktop\Temporaire\Arc_temp.tab" as Arc_temp
		Alter table Arc_temp( add Origine Integer,Dist_Rui_ini float order Origine,Destination,Distance_Résultat,X_ini,Y_ini,X_fin,Y_fin,Dist_Rui_ini,Dist_Rui_fin) Interactive
		Update Arc_temp set Origine=idn
		Update Arc_temp set Dist_Rui_ini=Dist
		Insert Into CoefEP( COL1, COL2,COL3,COL4, COL5,COL6,COL7,COL8,COL9) Select COL1,COL2,COL3,COL4,COL5,COL6,COL7,COL8,COL9 From Arc_temp
		Commit table CoefEP
		Drop table Arc_temp
		Close table Arc_temporaire
	Fetch Next From Noeuds
	Loop

print "Suppression des arcs impossibles"
	Select * from CoefEP where Distance_Résultat=0 into ASupprimer
	Delete from ASupprimer
	Commit table CoefEP
	pack table CoefEP Data	
	Alter Table "CoefEP" ( add Zini Float,Zfin Float,Pente Float,RapprochementR Float, ResDistance Float, Coefficient float order Origine,Destination,Zini,Zfin,Dist_Rui_ini,Dist_Rui_fin,Distance_Résultat,Pente,RapprochementR, ResDistance, Coefficient)
	Add Column "CoefEP" (Zini )From Noeuds_EP_PC Set To Alti_TN Where COL1 = COL1 
	Add Column "CoefEP" (Zfin )From Noeuds_EP_PC Set To Alti_TN Where COL2 = COL1 
	
	
print "Check-in des lignes interdites"
	nb=Tableinfo(LigneInterdite, TAB_INFO_NROWS)
	if (nb<>0) then
		Create Map For CoefEP Using Noeuds_EP_PC 
		Set CoordSys Table Noeuds_EP_PC
		Update CoefEP set obj= createline(X_ini,Y_ini,X_fin,Y_fin)
		commit table CoefEP
		Alter table CoefEP (add Supprimer Logical)
		commit table CoefEP
		Select * from CoefEP, LigneInterdite where CoefEP.Obj Intersects LigneInterdite.Obj into ASupprimer
		Update ASupprimer set Supprimer=True
		Select* from CoefEP where Supprimer=True into ASupprimer1
		Delete from ASupprimer1
		Commit table CoefEP
		Pack table CoefEP Graphic Data
		drop map CoefEP
		Alter table CoefEP (drop Supprimer)
		Commit table CoefEP
		print "Fin de la suppression des arcs interdits"
	end if
	
	Commit Table CoefEP As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\CoefEP_sauv.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
		
print "Correction des altitudes et distances nulles"
	Select * from CoefEP where Zini=0 into AModifier
	Update AModifier set Zini=0.001
	Select * from CoefEP where Dist_Rui_ini =0 into AModifier
	Update AModifier set Dist_Rui_ini=0.001
	commit table CoefEP
	Close table AModifier

print "Calcul des coefficients"
	Update CoefEP Set Pente = (Zini-Zfin)/Zini
	'Update CoefEP Set RapprochementR = (Dist_Rui_ini-Dist_Rui_fin)/Dist_Rui_ini
	'Update CoefEP set ResDistance=Res/Distance_Résultat
	Commit Table CoefEP Interactive		

print "Représentation des arcs du réseau d'EP"
	Create Table "Arcs" (Id_Arc Integer, Point_ini Integer,Point_fin Integer, Coefficient float, Longueur Float)
	Create Map For Arcs Using Noeuds_EP_PC
	Commit Table Arcs As "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Arcs_EP_PC.TAB" TYPE NATIVE Charset "WindowsLatin1" Interactive
	Open Table "D:\MOSSET\Desktop\PIREN_VDM_dep_02_2019\Resultat Arc\Arcs_EP_PC.TAB" as Arcs_EP_PC
	Close Table Arcs
	Commit Table Arcs_EP_PC Interactive	
	'Update CoefEP Set Coefficient = Pente*aa+RapprochementR*bb+ResDistance*cc
	'Commit Table CoefEP Interactive
	Update Noeuds_EP_PC Set Exutoire=False
	Commit Table Noeuds_EP_PC Interactive
	set coordsys table Noeuds_EP_PC
	i=1
	Select * from Noeuds_EP_PC order by Dist_Rui desc into Noeuds_EP_PC_Ordonné
	Fetch First From Noeuds_EP_PC_Ordonné
	Do while not EOT (Noeuds_EP_PC_Ordonné)
		idn=Noeuds_EP_PC.ID_Regard
		Select * from CoefEP where Origine=idn into NoeudEnCours
		nb = Tableinfo(NoeudEnCours , TAB_INFO_NROWS)
		If nb > 0 then	'C'est un point du réseau
			Select * from Noeuds_EP_PC where ID_Regard = idn into Noeud
			Xini = centroidx(Noeud.obj)
			Yini = centroidy(Noeud.obj)
			Select * from CoefEP where Origine=idn And (Pente>0 or Pente=0) And Distance_Résultat< 2*Dist_Rui_ini order by Distance_Résultat into NoeudEnCours
			nb = Tableinfo(NoeudEnCours , TAB_INFO_NROWS)
			If nb=0 then 			
				Select * from Noeuds_EP_PC where ID_Regard = idn into Noeud
				Update Noeud set Exutoire= true
			Else							
				Fetch first from NoeudEnCours
				Fin=NoeudEnCours.Destination
				rap=NoeudEnCours.RapprochementR
				co=NoeudEnCours.Coefficient
				Select * from Arcs_EP_PC where Point_ini=Fin into GBoucle			'Suppression du risque de boucle
				nb = Tableinfo(GBoucle , TAB_INFO_NROWS)
				Do while nb <> 0 
					Fin=GBoucle.Point_fin 
					if Fin=idn then
						Fetch next from NoeudEnCours
						Fin=NoeudEnCours.Destination
					end if	
					Select * from Arcs_EP_PC where Point_ini=Fin into GBoucle			'Suppression du risque de boucle
					nb = Tableinfo(GBoucle , TAB_INFO_NROWS)

				Loop
				if Fin<>0 then
					Fin=NoeudEnCours.Destination
					co=NoeudEnCours.Coefficient
					Select * from Noeuds_EP_PC where ID_Regard=Fin into RFin
					Xfin = centroidx(RFin.obj)
					Yfin = centroidy(RFin.obj)	
					Insert Into Arcs_EP_PC (COL1) Values ( i )
					Select * from Arcs_EP_PC where Id_Arc=i into ArcEPenCours
					update ArcEPenCours set Point_ini=idn
					update ArcEPenCours set Point_fin=fin
					update ArcEPenCours set Coefficient=co
					update ArcEPenCours set obj= createline(Xini,Yini,Xfin,Yfin)
					i=i+1
				else
					Select * from Noeuds_EP_PC where ID_Regard = idn into Noeud
					Update Noeud set Exutoire= true
				end if
			end if
		end if
	Fetch Next From Noeuds_EP_PC_Ordonné
	Loop
	Commit table Arcs_EP_PC
	Commit table Noeuds_EP_PC
	Close table Noeud

	Update Arcs_EP_PC Set Longueur = CartesianObjectLen(obj, "m")
	Commit table Arcs_EP_PC

print "Correction de la table Jonction_Regard_Riviere"
	Select * from DistREP where Origine not in (Select NUMERO from Noeuds_EP_PC where Exutoire=1) into ASupprimer
	Delete from ASupprimer
	Commit table DistREP
	Pack table DistREP Graphic Data

END IF 
print "Fin de calcul du réseau des eaux pluviales"

Close All Interactive

end sub

'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'																		5-Quitter																								
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
sub quitter

End program

end sub
